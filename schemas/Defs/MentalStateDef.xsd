<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="https://github.com/sharky98/RWSchema/Defs" elementFormDefault="qualified" targetNamespace="https://github.com/sharky98/RWSchema/Defs" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="CommonElements.xsd" />
  <xs:complexType name="MentalStateDef">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="stateClass" type="xs:string" />
      <xs:element name="workerClass" type="xs:string" />
      <xs:element name="category" type="MentalStateCategory" />
      <xs:element name="prisonersCanDo" type="StrBoolean" />
      <xs:element name="slavesCanDo" type="StrBoolean" />
      <xs:element name="inCaravanCanDo" type="StrBoolean" />
      <xs:element name="colonistsOnly" type="StrBoolean" />
      <xs:element name="slavesOnly" type="StrBoolean" />
      <xs:element name="requiredCapacities">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="downedCanDo" type="StrBoolean" />
      <xs:element name="unspawnedNotInCaravanCanDo" type="StrBoolean" />
      <xs:element name="blockNormalThoughts" type="StrBoolean" />
      <xs:element name="stopsJobs" type="StrBoolean" />
      <xs:element name="blockInteractionInitiationExcept">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="blockInteractionRecipientExcept">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="blockRandomInteraction" type="StrBoolean" />
      <xs:element name="stateEffecter" type="xs:string" />
      <xs:element name="tale" type="xs:string" />
      <xs:element name="allowBeatfire" type="StrBoolean" />
      <xs:element name="drugCategory" type="DrugCategory" />
      <xs:element name="ignoreDrugPolicy" type="StrBoolean" />
      <xs:element name="ticksBetweenRamblingRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="recoveryMtbDays" type="xs:float" />
      <xs:element name="minTicksBeforeRecovery" type="xs:int" />
      <xs:element name="maxTicksBeforeRecovery" type="xs:int" />
      <xs:element name="recoverFromSleep" type="StrBoolean" />
      <xs:element name="recoverFromDowned" type="StrBoolean" />
      <xs:element name="recoverFromCaptured" type="StrBoolean" />
      <xs:element name="recoverFromCollapsingExhausted" type="StrBoolean" />
      <xs:element name="moodRecoveryThought" type="xs:string" />
      <xs:element name="allowGuilty" type="StrBoolean" />
      <xs:element name="beginLetter" type="xs:string" />
      <xs:element name="beginLetterLabel" type="xs:string" />
      <xs:element name="beginLetterDef" type="xs:string" />
      <xs:element name="nameColor" type="Color" />
      <xs:element name="recoveryMessage" type="xs:string" />
      <xs:element name="baseInspectLine" type="xs:string" />
      <xs:element name="escapingPrisonersIgnore" type="StrBoolean" />
      <xs:element name="blocksDefendAndExpandHive" type="StrBoolean" />
      <xs:element name="defName" type="xs:string" />
      <xs:element name="label" type="xs:string" />
      <xs:element name="description" type="xs:string" />
      <xs:element name="descriptionHyperlinks">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="DefHyperlink" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="ignoreConfigErrors" type="StrBoolean" />
      <xs:element name="ignoreIllegalLabelCharacterConfigError" type="StrBoolean" />
      <xs:element name="modExtensions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="DefModExtension" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="ParentName" type="xs:string" />
    <xs:attribute name="Abstract" type="StrBoolean" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
</xs:schema>