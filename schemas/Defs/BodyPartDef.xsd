<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="https://github.com/sharky98/RWSchema/Defs" elementFormDefault="qualified" targetNamespace="https://github.com/sharky98/RWSchema/Defs" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="CommonElements.xsd" />
  <xs:complexType name="BodyPartDef">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="labelShort" type="xs:string" />
      <xs:element name="tags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="hitPoints" type="xs:int" />
      <xs:element name="permanentInjuryChanceFactor" type="xs:float" />
      <xs:element name="bleedRate" type="xs:float" />
      <xs:element name="frostbiteVulnerability" type="xs:float" />
      <xs:element name="alive" type="xs:boolean" />
      <xs:element name="delicate" type="xs:boolean" />
      <xs:element name="canScarify" type="xs:boolean" />
      <xs:element name="beautyRelated" type="xs:boolean" />
      <xs:element name="conceptual" type="xs:boolean" />
      <xs:element name="socketed" type="xs:boolean" />
      <xs:element name="spawnThingOnRemoved" type="xs:string" />
      <xs:element name="pawnGeneratorCanAmputate" type="xs:boolean" />
      <xs:element name="canSuggestAmputation" type="xs:boolean" />
      <xs:element name="forceAlwaysRemovable" type="xs:boolean" />
      <xs:element name="hitChanceFactors">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" type="xs:string" />
                  <xs:element name="value" type="xs:float" />
                </xs:sequence>
                <xs:attribute name="MayRequire" type="xs:string" />
                <xs:attribute name="MayRequireAnyOf" type="xs:string" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="destroyableByDamage" type="xs:boolean" />
      <xs:element name="canBeVacuumBurnt" type="xs:boolean" />
      <xs:element name="removeRecipeLabelOverride" type="xs:string" />
      <xs:element name="executionPartPriority" type="xs:float" />
      <xs:element name="defName" type="xs:string" />
      <xs:element name="label" type="xs:string" />
      <xs:element name="description" type="xs:string" />
      <xs:element name="descriptionHyperlinks">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="DefHyperlink" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="ignoreConfigErrors" type="xs:boolean" />
      <xs:element name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element name="modExtensions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="DefModExtension" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="ParentName" type="xs:string" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
</xs:schema>