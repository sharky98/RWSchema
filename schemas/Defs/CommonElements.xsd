<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="https://github.com/sharky98/RWSchema/Defs" elementFormDefault="qualified" targetNamespace="https://github.com/sharky98/RWSchema/Defs" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="StrBoolean">
    <xs:restriction base="xs:string">
      <xs:enumeration value="true" />
      <xs:enumeration value="True" />
      <xs:enumeration value="false" />
      <xs:enumeration value="False" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DefHyperlink">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DefModExtension">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BodyTypeGraphicData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="bodyType" type="xs:string" />
      <xs:element name="texturePath" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="RotDrawMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Fresh" />
      <xs:enumeration value="Rotting" />
      <xs:enumeration value="Dessicated" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RenderNodePawnType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Any" />
      <xs:enumeration value="HumanlikeOnly" />
      <xs:enumeration value="NonHumanlikeOnly" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Color">
    <xs:restriction base="xs:string">
      <xs:pattern value="\(\s*\d+(\.\d+)?\s*,\s*\d+(\.\d+)?\s*,\s*\d+(\.\d+)?\s*(,\s*\d+(\.\d+)?\s*)?\)" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AttachmentColorType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Custom" />
      <xs:enumeration value="Hair" />
      <xs:enumeration value="Skin" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DrawData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="scaleOffsetByBodySize" type="StrBoolean" />
      <xs:element name="useBodyPartAnchor" type="StrBoolean" />
      <xs:element name="scale" type="xs:float" />
      <xs:element name="childScale" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="Vector2">
    <xs:restriction base="xs:string">
      <xs:pattern value="\(\s*-?\d+(\.\d+)?\s*,\s*-?\d+(\.\d+)?\s*\)" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Side">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Center" />
      <xs:enumeration value="Left" />
      <xs:enumeration value="Right" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Rot4">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="OverlayLayer">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Body" />
      <xs:enumeration value="Head" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Boolean">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnRenderNodeProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="workerClass" type="xs:string" />
      <xs:element name="subworkerClasses">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="nodeClass" type="xs:string" />
      <xs:element name="tagDef" type="xs:string" />
      <xs:element name="parentTagDef" type="xs:string" />
      <xs:element name="children">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnRenderNodeProperties" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="texPath" type="xs:string" />
      <xs:element name="texPaths">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="texPathFemale" type="xs:string" />
      <xs:element name="texPathsFemale">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="bodyTypeGraphicPaths">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="BodyTypeGraphicData" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="texSeed" type="xs:int" />
      <xs:element name="useGraphic" type="StrBoolean" />
      <xs:element name="skipFlag" type="xs:string" />
      <xs:element name="rotDrawMode" type="RotDrawMode" />
      <xs:element name="pawnType" type="RenderNodePawnType" />
      <xs:element name="linkedBodyPartsGroup" type="xs:string" />
      <xs:element name="color" type="Color" />
      <xs:element name="colorRGBPostFactor" type="xs:float" />
      <xs:element name="useRottenColor" type="StrBoolean" />
      <xs:element name="useSkinShader" type="StrBoolean" />
      <xs:element name="shaderTypeDef" type="xs:string" />
      <xs:element name="colorType" type="AttachmentColorType" />
      <xs:element name="baseLayer" type="xs:float" />
      <xs:element name="drawData" type="DrawData" />
      <xs:element name="oppositeFacingLayerWhenFlipped" type="StrBoolean" />
      <xs:element name="overrideMeshSize" type="Vector2" />
      <xs:element name="drawSize" type="Vector2" />
      <xs:element name="anchorTag" type="xs:string" />
      <xs:element name="side" type="Side" />
      <xs:element name="narrowCrownHorizontalOffset" type="xs:float" />
      <xs:element name="visibleFacing">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Rot4" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="flipGraphic" type="StrBoolean" />
      <xs:element name="rotateIndependently" type="StrBoolean" />
      <xs:element name="debugLabel" type="xs:string" />
      <xs:element name="overlayLayer" type="OverlayLayer" />
      <xs:element name="overlayOverApparel" type="Boolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="GeneticTraitData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="degree" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="WorkTags">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="ManualDumb" />
      <xs:enumeration value="ManualSkilled" />
      <xs:enumeration value="Violent" />
      <xs:enumeration value="Caring" />
      <xs:enumeration value="Social" />
      <xs:enumeration value="Commoner" />
      <xs:enumeration value="Intellectual" />
      <xs:enumeration value="Animals" />
      <xs:enumeration value="Artistic" />
      <xs:enumeration value="Crafting" />
      <xs:enumeration value="Cooking" />
      <xs:enumeration value="Firefighting" />
      <xs:enumeration value="Cleaning" />
      <xs:enumeration value="Hauling" />
      <xs:enumeration value="PlantWork" />
      <xs:enumeration value="Mining" />
      <xs:enumeration value="Hunting" />
      <xs:enumeration value="Constructing" />
      <xs:enumeration value="Shooting" />
      <xs:enumeration value="AllWork" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EndogeneCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Melanin" />
      <xs:enumeration value="HairColor" />
      <xs:enumeration value="Ears" />
      <xs:enumeration value="Nose" />
      <xs:enumeration value="Jaw" />
      <xs:enumeration value="Hands" />
      <xs:enumeration value="Headbone" />
      <xs:enumeration value="Head" />
      <xs:enumeration value="BodyType" />
      <xs:enumeration value="Voice" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Aptitude">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="skill" type="xs:string" />
      <xs:element name="level" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="PassionModType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="AddOneLevel" />
      <xs:enumeration value="DropAll" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PassionMod">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="skill" type="xs:string" />
      <xs:element name="modType" type="PassionModType" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StatModifier">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="stat" type="xs:string" />
      <xs:element name="value" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ConditionalStatAffecter">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="statFactors">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="statOffsets">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DamageFactor">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="damageDef" type="xs:string" />
      <xs:element name="factor" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnCapacityModifier">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="capacity" type="xs:string" />
      <xs:element name="offset" type="xs:float" />
      <xs:element name="setMax" type="xs:float" />
      <xs:element name="postFactor" type="xs:float" />
      <xs:element name="statFactorMod" type="xs:string" />
      <xs:element name="setMaxCurveEvaluateStat" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="TagFilter">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="tags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="whitelist" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="GeneticBodyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Fat" />
      <xs:enumeration value="Thin" />
      <xs:enumeration value="Hulk" />
      <xs:enumeration value="Standard" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="WeightedSymbol">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="symbol" type="xs:string" />
      <xs:element name="weight" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="GeneSymbolPack">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="prefixSymbols">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="WeightedSymbol" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="suffixSymbols">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="WeightedSymbol" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="wholeNameSymbols">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="WeightedSymbol" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="LoopMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Loop" />
      <xs:enumeration value="Clamp" />
      <xs:enumeration value="End" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Vector3">
    <xs:restriction base="xs:string">
      <xs:pattern value="\(\s*-?\d+(\.\d+)?\s*,\s*-?\d+(\.\d+)?\s*,\s*-?\d+(\.\d+)?\s*\)" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Keyframe">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="tick" type="xs:int" />
      <xs:element name="offset" type="Vector3" />
      <xs:element name="angle" type="xs:float" />
      <xs:element name="scale" type="Vector3" />
      <xs:element name="graphicState" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="RotationMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="OneD" />
      <xs:enumeration value="TwoD" />
      <xs:enumeration value="PawnAimTarget" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyframeAnimationPart">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="keyframes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Keyframe" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="pivot" type="Vector2" />
      <xs:element name="rotationMode" type="RotationMode" />
      <xs:element name="workerType" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="CurveKey">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="tick" type="xs:int" />
      <xs:element name="graphicState" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ComplexCurve">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="Vector3Curve">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="x" type="ComplexCurve" />
      <xs:element name="y" type="ComplexCurve" />
      <xs:element name="z" type="ComplexCurve" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="CurveKeyAnimationPart">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="keyframes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="CurveKey" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="normalized" type="StrBoolean" />
      <xs:element name="offset" type="Vector3Curve" />
      <xs:element name="angle" type="ComplexCurve" />
      <xs:element name="scale" type="Vector3Curve" />
      <xs:element name="pivot" type="Vector2" />
      <xs:element name="rotationMode" type="RotationMode" />
      <xs:element name="workerType" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="BodyPartHeight">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Bottom" />
      <xs:enumeration value="Middle" />
      <xs:enumeration value="Top" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BodyPartDepth">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Inside" />
      <xs:enumeration value="Outside" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="BodyPartRecord">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="body" type="xs:string" />
      <xs:element name="def" type="xs:string" />
      <xs:element name="customLabel" type="xs:string" />
      <xs:element name="parts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="BodyPartRecord" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="height" type="BodyPartHeight" />
      <xs:element name="depth" type="BodyPartDepth" />
      <xs:element name="coverage" type="xs:float" />
      <xs:element name="groups">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="woundAnchorTag" type="xs:string" />
      <xs:element name="flipGraphic" type="StrBoolean" />
      <xs:element name="visibleHediffRots">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Rot4" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BackstoryCategoryFilter">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="categories">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="exclude">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="categoriesChildhood">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="excludeChildhood">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="categoriesAdulthood">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="excludeAdulthood">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="commonality" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ShaderParameter">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="AttachPointType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RootNone" />
      <xs:enumeration value="CableConnection0" />
      <xs:enumeration value="CableConnection1" />
      <xs:enumeration value="CableConnection2" />
      <xs:enumeration value="CableConnection3" />
      <xs:enumeration value="PlatformRestraint0" />
      <xs:enumeration value="PlatformRestraint1" />
      <xs:enumeration value="PlatformRestraint2" />
      <xs:enumeration value="PlatformRestraint3" />
      <xs:enumeration value="Exhaust" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="AttachPoint">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="offset" type="Vector3" />
      <xs:element name="type" type="AttachPointType" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ShadowData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="volume" type="Vector3" />
      <xs:element name="offset" type="Vector3" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="Rect">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DamageGraphicData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="enabled" type="StrBoolean" />
      <xs:element name="rectN" type="Rect" />
      <xs:element name="rectE" type="Rect" />
      <xs:element name="rectS" type="Rect" />
      <xs:element name="rectW" type="Rect" />
      <xs:element name="rect" type="Rect" />
      <xs:element name="scratches">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="cornerTL" type="xs:string" />
      <xs:element name="cornerTR" type="xs:string" />
      <xs:element name="cornerBL" type="xs:string" />
      <xs:element name="cornerBR" type="xs:string" />
      <xs:element name="edgeLeft" type="xs:string" />
      <xs:element name="edgeRight" type="xs:string" />
      <xs:element name="edgeTop" type="xs:string" />
      <xs:element name="edgeBot" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="LinkDrawerType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Basic" />
      <xs:enumeration value="CornerFiller" />
      <xs:enumeration value="CornerOverlay" />
      <xs:enumeration value="Transmitter" />
      <xs:enumeration value="TransmitterOverlay" />
      <xs:enumeration value="Asymmetric" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LinkFlags">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="MapEdge" />
      <xs:enumeration value="Rock" />
      <xs:enumeration value="Wall" />
      <xs:enumeration value="Sandbags" />
      <xs:enumeration value="PowerConduit" />
      <xs:enumeration value="Barricades" />
      <xs:enumeration value="Fences" />
      <xs:enumeration value="Fleshmass" />
      <xs:enumeration value="SolidIce" />
      <xs:enumeration value="BurrowWall" />
      <xs:enumeration value="Custom1" />
      <xs:enumeration value="Custom2" />
      <xs:enumeration value="Custom3" />
      <xs:enumeration value="Custom4" />
      <xs:enumeration value="Custom5" />
      <xs:enumeration value="Custom6" />
      <xs:enumeration value="Custom7" />
      <xs:enumeration value="Custom8" />
      <xs:enumeration value="Custom9" />
      <xs:enumeration value="Custom10" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="BorderData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="color" type="Color" />
      <xs:element name="size" type="Vector2" />
      <xs:element name="offset" type="Vector3" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="AsymmetricLinkData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="linkFlags" type="LinkFlags" />
      <xs:element name="linkToDoors" type="StrBoolean" />
      <xs:element name="drawDoorBorderEast" type="BorderData" />
      <xs:element name="drawDoorBorderWest" type="BorderData" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="GraphicData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="name" type="xs:string" />
      <xs:element name="texPath" type="xs:string" />
      <xs:element name="maskPath" type="xs:string" />
      <xs:element name="graphicClass" type="xs:string" />
      <xs:element name="shaderType" type="xs:string" />
      <xs:element name="shaderParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ShaderParameter" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="color" type="Color" />
      <xs:element name="colorTwo" type="Color" />
      <xs:element name="drawSize" type="Vector2" />
      <xs:element name="drawOffset" type="Vector3" />
      <xs:element name="drawOffsetNorth" type="Vector3" />
      <xs:element name="drawOffsetEast" type="Vector3" />
      <xs:element name="drawOffsetSouth" type="Vector3" />
      <xs:element name="drawOffsetWest" type="Vector3" />
      <xs:element name="onGroundRandomRotateAngle" type="xs:float" />
      <xs:element name="drawRotated" type="StrBoolean" />
      <xs:element name="allowFlip" type="StrBoolean" />
      <xs:element name="flipExtraRotation" type="xs:float" />
      <xs:element name="renderInstanced" type="StrBoolean" />
      <xs:element name="allowAtlasing" type="StrBoolean" />
      <xs:element name="renderQueue" type="xs:int" />
      <xs:element name="overlayOpacity" type="xs:float" />
      <xs:element name="attachments">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="GraphicData" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="attachPoints">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="AttachPoint" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="addTopAltitudeBias" type="StrBoolean" />
      <xs:element name="ignoreThingDrawColor" type="StrBoolean" />
      <xs:element name="maxSnS" type="Vector2" />
      <xs:element name="offsetSnS" type="Vector2" />
      <xs:element name="shadowData" type="ShadowData" />
      <xs:element name="damageData" type="DamageGraphicData" />
      <xs:element name="linkType" type="LinkDrawerType" />
      <xs:element name="linkFlags" type="LinkFlags" />
      <xs:element name="asymmetricLink" type="AsymmetricLinkData" />
      <xs:element name="cornerOverlayPath" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BodyPartToDrop">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="bodyPartGroup" type="xs:string" />
      <xs:element name="thing" type="xs:string" />
      <xs:element name="allowMale" type="StrBoolean" />
      <xs:element name="allowFemale" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnKindLifeStage">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="label" type="xs:string" />
      <xs:element name="labelPlural" type="xs:string" />
      <xs:element name="labelMale" type="xs:string" />
      <xs:element name="labelMalePlural" type="xs:string" />
      <xs:element name="labelFemale" type="xs:string" />
      <xs:element name="labelFemalePlural" type="xs:string" />
      <xs:element name="bodyGraphicData" type="GraphicData" />
      <xs:element name="femaleGraphicData" type="GraphicData" />
      <xs:element name="dessicatedBodyGraphicData" type="GraphicData" />
      <xs:element name="femaleDessicatedBodyGraphicData" type="GraphicData" />
      <xs:element name="corpseGraphicData" type="GraphicData" />
      <xs:element name="swimmingGraphicData" type="GraphicData" />
      <xs:element name="femaleSwimmingGraphicData" type="GraphicData" />
      <xs:element name="femaleCorpseGraphicData" type="GraphicData" />
      <xs:element name="silhouetteGraphicData" type="GraphicData" />
      <xs:element name="rottingGraphicData" type="GraphicData" />
      <xs:element name="femaleRottingGraphicData" type="GraphicData" />
      <xs:element name="flyingAnimationEast" type="xs:string" />
      <xs:element name="flyingAnimationNorth" type="xs:string" />
      <xs:element name="flyingAnimationSouth" type="xs:string" />
      <xs:element name="flyingAnimationEastFemale" type="xs:string" />
      <xs:element name="flyingAnimationNorthFemale" type="xs:string" />
      <xs:element name="flyingAnimationSouthFemale" type="xs:string" />
      <xs:element name="butcherBodyPart" type="BodyPartToDrop" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="AlternateGraphic">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="graphicData" type="GraphicData" />
      <xs:element name="dessicatedGraphicData" type="GraphicData" />
      <xs:element name="swimmingGraphicData" type="GraphicData" />
      <xs:element name="rottingGraphicData" type="GraphicData" />
      <xs:element name="attachPoints">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="AttachPoint" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="TraitRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="degree" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="XenotypeSet">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StyleItemTagWeighted">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MissingPart">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="FloatRange">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="min" type="xs:float" />
      <xs:element name="max" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="Gender">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Male" />
      <xs:enumeration value="Female" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DevelopmentalStage">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Newborn" />
      <xs:enumeration value="Baby" />
      <xs:enumeration value="Child" />
      <xs:enumeration value="Adult" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QualityCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Awful" />
      <xs:enumeration value="Poor" />
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Good" />
      <xs:enumeration value="Excellent" />
      <xs:enumeration value="Masterwork" />
      <xs:enumeration value="Legendary" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SpecificApparelRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="IntRange">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="min" type="xs:int" />
      <xs:element name="max" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StartingHediff">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="severity" type="xs:float" />
      <xs:element name="chance" type="xs:float" />
      <xs:element name="durationTicksRange" type="IntRange" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MiscDamage">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="damage" type="xs:string" />
      <xs:element name="groups">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="chance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ThingDefCountClass">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="thingDef" type="xs:string" />
      <xs:element name="count" type="xs:int" />
      <xs:element name="color" type="Color" />
      <xs:element name="chance" type="xs:float" />
      <xs:element name="stuff" type="xs:string" />
      <xs:element name="quality" type="QualityCategory" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnInventoryOption">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="thingDef" type="xs:string" />
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="choiceChance" type="xs:float" />
      <xs:element name="skipChance" type="xs:float" />
      <xs:element name="subOptionsTakeAll">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnInventoryOption" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="subOptionsChooseOne">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnInventoryOption" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SkillRange">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BackstoryTrait">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="degree" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SkillValue">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="skill" type="xs:string" />
      <xs:element name="range">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DamageDefAdditionalHediff">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="hediff" type="xs:string" />
      <xs:element name="severityPerDamageDealt" type="xs:float" />
      <xs:element name="severityFixed" type="xs:float" />
      <xs:element name="victimSeverityScaling" type="xs:string" />
      <xs:element name="inverseStatScaling" type="StrBoolean" />
      <xs:element name="victimSeverityScalingByInvBodySize" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="TargetType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Thing" />
      <xs:enumeration value="Cell" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IconSource">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Cost" />
      <xs:enumeration value="Placed" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Texture2D">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="MoteSpawnLocType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OnSource" />
      <xs:enumeration value="BetweenPositions" />
      <xs:enumeration value="BetweenTouchingCells" />
      <xs:enumeration value="RandomCellOnTarget" />
      <xs:enumeration value="RandomDrawPosOnTarget" />
      <xs:enumeration value="OnTarget" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SubEffecterDef">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="subEffecterClass" type="xs:string" />
      <xs:element name="burstCount">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="ticksBetweenMotes" type="xs:int" />
      <xs:element name="maxMoteCount" type="xs:int" />
      <xs:element name="initialDelayTicks" type="xs:int" />
      <xs:element name="lifespanMaxTicks" type="xs:int" />
      <xs:element name="chancePerTick" type="xs:float" />
      <xs:element name="chancePeriodTicks" type="xs:int" />
      <xs:element name="spawnLocType" type="MoteSpawnLocType" />
      <xs:element name="positionLerpFactor" type="xs:float" />
      <xs:element name="positionOffset" type="Vector3" />
      <xs:element name="positionRadius" type="xs:float" />
      <xs:element name="positionRadiusMin" type="xs:float" />
      <xs:element name="perRotationOffsets">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Vector3" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="positionDimensions" type="Vector3" />
      <xs:element name="attachToSpawnThing" type="StrBoolean" />
      <xs:element name="avoidLastPositionRadius" type="xs:float" />
      <xs:element name="attachPoint" type="AttachPointType" />
      <xs:element name="moteDef" type="xs:string" />
      <xs:element name="fleckDef" type="xs:string" />
      <xs:element name="color" type="Color" />
      <xs:element name="angle">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="absoluteAngle" type="StrBoolean" />
      <xs:element name="useTargetAInitialRotation" type="StrBoolean" />
      <xs:element name="useTargetBInitialRotation" type="StrBoolean" />
      <xs:element name="fleckUsesAngleForVelocity" type="StrBoolean" />
      <xs:element name="rotateTowardsTargetCenter" type="StrBoolean" />
      <xs:element name="useTargetABodyAngle" type="StrBoolean" />
      <xs:element name="useTargetBBodyAngle" type="StrBoolean" />
      <xs:element name="speed">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="rotation">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="rotationRate">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="scale">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="airTime">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="soundDef" type="xs:string" />
      <xs:element name="intermittentSoundInterval">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="ticksBeforeSustainerStart" type="xs:int" />
      <xs:element name="orbitOrigin" type="StrBoolean" />
      <xs:element name="orbitSpeed">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="orbitSnapStrength" type="xs:float" />
      <xs:element name="makeMoteOnSubtrigger" type="StrBoolean" />
      <xs:element name="destroyMoteOnCleanup" type="StrBoolean" />
      <xs:element name="cameraShake">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="distanceAttenuationScale" type="xs:float" />
      <xs:element name="distanceAttenuationMax" type="xs:float" />
      <xs:element name="randomWeight" type="xs:float" />
      <xs:element name="subTriggerOnSpawn" type="StrBoolean" />
      <xs:element name="children">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="SubEffecterDef" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="OffsetMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TrueCenterCompensated" />
      <xs:enumeration value="Free" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PsychicDroneLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="GoodMedium" />
      <xs:enumeration value="BadLow" />
      <xs:enumeration value="BadMedium" />
      <xs:enumeration value="BadHigh" />
      <xs:enumeration value="BadExtreme" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="GameSetupStep">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="GenStep">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="HediffCompProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="compClass" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="MentalBreakIntensity">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Minor" />
      <xs:enumeration value="Major" />
      <xs:enumeration value="Extreme" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="HediffGiver">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="hediff" type="xs:string" />
      <xs:element name="partsToAffect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="canAffectAnyLivePart" type="StrBoolean" />
      <xs:element name="allowOnLodgers" type="StrBoolean" />
      <xs:element name="allowOnQuestRewardPawns" type="StrBoolean" />
      <xs:element name="allowOnQuestReservedPawns" type="StrBoolean" />
      <xs:element name="allowOnBeggars" type="StrBoolean" />
      <xs:element name="countToAffect" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MentalStateGiver">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="mentalState" type="xs:string" />
      <xs:element name="mtbDays" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StatModifierBySeverity">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="stat" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="HediffStage">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="minSeverity" type="xs:float" />
      <xs:element name="label" type="xs:string" />
      <xs:element name="overrideLabel" type="xs:string" />
      <xs:element name="becomeVisible" type="StrBoolean" />
      <xs:element name="lifeThreatening" type="StrBoolean" />
      <xs:element name="tale" type="xs:string" />
      <xs:element name="vomitMtbDays" type="xs:float" />
      <xs:element name="deathMtbDays" type="xs:float" />
      <xs:element name="mtbDeathDestroysBrain" type="StrBoolean" />
      <xs:element name="painFactor" type="xs:float" />
      <xs:element name="painOffset" type="xs:float" />
      <xs:element name="totalBleedFactor" type="xs:float" />
      <xs:element name="naturalHealingFactor" type="xs:float" />
      <xs:element name="regeneration" type="xs:float" />
      <xs:element name="showRegenerationStat" type="StrBoolean" />
      <xs:element name="forgetMemoryThoughtMtbDays" type="xs:float" />
      <xs:element name="pctConditionalThoughtsNullified" type="xs:float" />
      <xs:element name="pctAllThoughtNullification" type="xs:float" />
      <xs:element name="opinionOfOthersFactor" type="xs:float" />
      <xs:element name="fertilityFactor" type="xs:float" />
      <xs:element name="hungerRateFactor" type="xs:float" />
      <xs:element name="hungerRateFactorOffset" type="xs:float" />
      <xs:element name="restFallFactor" type="xs:float" />
      <xs:element name="restFallFactorOffset" type="xs:float" />
      <xs:element name="socialFightChanceFactor" type="xs:float" />
      <xs:element name="foodPoisoningChanceFactor" type="xs:float" />
      <xs:element name="mentalBreakMtbDays" type="xs:float" />
      <xs:element name="mentalBreakExplanation" type="xs:string" />
      <xs:element name="blocksMentalBreaks" type="StrBoolean" />
      <xs:element name="blocksInspirations" type="StrBoolean" />
      <xs:element name="overrideMoodBase" type="xs:float" />
      <xs:element name="severityGainFactor" type="xs:float" />
      <xs:element name="allowedMentalBreakIntensities">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="MentalBreakIntensity" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="makeImmuneTo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="capMods">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnCapacityModifier" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="hediffGivers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="HediffGiver" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="mentalStateGivers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="MentalStateGiver" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="statOffsets">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="statFactors">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="statOffsetsBySeverity">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="StatModifierBySeverity" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="statFactorsBySeverity">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="StatModifierBySeverity" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="damageFactors">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="DamageFactor" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="enablesNeeds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disablesNeeds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="multiplyStatChangesBySeverity" type="StrBoolean" />
      <xs:element name="statOffsetEffectMultiplier" type="xs:string" />
      <xs:element name="statFactorEffectMultiplier" type="xs:string" />
      <xs:element name="capacityFactorEffectMultiplier" type="xs:string" />
      <xs:element name="disabledWorkTags" type="WorkTags" />
      <xs:element name="overrideTooltip" type="xs:string" />
      <xs:element name="extraTooltip" type="xs:string" />
      <xs:element name="blocksSleeping" type="StrBoolean" />
      <xs:element name="partEfficiencyOffset" type="xs:float" />
      <xs:element name="partIgnoreMissingHP" type="StrBoolean" />
      <xs:element name="destroyPart" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="HediffInfectionPathway">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="InjuryProps">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="painPerSeverity" type="xs:float" />
      <xs:element name="averagePainPerSeverityPermanent" type="xs:float" />
      <xs:element name="bleedRate" type="xs:float" />
      <xs:element name="canMerge" type="StrBoolean" />
      <xs:element name="destroyedLabel" type="xs:string" />
      <xs:element name="destroyedOutLabel" type="xs:string" />
      <xs:element name="useRemovedLabel" type="StrBoolean" />
      <xs:element name="alwaysUseDestroyedLabel" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="AddedBodyPartProps">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="partEfficiency" type="xs:float" />
      <xs:element name="solid" type="StrBoolean" />
      <xs:element name="isGoodWeapon" type="StrBoolean" />
      <xs:element name="betterThanNatural" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RulePack">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="rulesStrings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="rulesFiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="include">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="CheckJobOverrideOnDamageMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Never" />
      <xs:enumeration value="OnlyIfInstigatorNotJobTarget" />
      <xs:enumeration value="Always" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="KeyCode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Backspace" />
      <xs:enumeration value="Tab" />
      <xs:enumeration value="Clear" />
      <xs:enumeration value="Return" />
      <xs:enumeration value="Pause" />
      <xs:enumeration value="Escape" />
      <xs:enumeration value="Space" />
      <xs:enumeration value="Exclaim" />
      <xs:enumeration value="DoubleQuote" />
      <xs:enumeration value="Hash" />
      <xs:enumeration value="Dollar" />
      <xs:enumeration value="Percent" />
      <xs:enumeration value="Ampersand" />
      <xs:enumeration value="Quote" />
      <xs:enumeration value="LeftParen" />
      <xs:enumeration value="RightParen" />
      <xs:enumeration value="Asterisk" />
      <xs:enumeration value="Plus" />
      <xs:enumeration value="Comma" />
      <xs:enumeration value="Minus" />
      <xs:enumeration value="Period" />
      <xs:enumeration value="Slash" />
      <xs:enumeration value="Alpha0" />
      <xs:enumeration value="Alpha1" />
      <xs:enumeration value="Alpha2" />
      <xs:enumeration value="Alpha3" />
      <xs:enumeration value="Alpha4" />
      <xs:enumeration value="Alpha5" />
      <xs:enumeration value="Alpha6" />
      <xs:enumeration value="Alpha7" />
      <xs:enumeration value="Alpha8" />
      <xs:enumeration value="Alpha9" />
      <xs:enumeration value="Colon" />
      <xs:enumeration value="Semicolon" />
      <xs:enumeration value="Less" />
      <xs:enumeration value="Equals" />
      <xs:enumeration value="Greater" />
      <xs:enumeration value="Question" />
      <xs:enumeration value="At" />
      <xs:enumeration value="LeftBracket" />
      <xs:enumeration value="Backslash" />
      <xs:enumeration value="RightBracket" />
      <xs:enumeration value="Caret" />
      <xs:enumeration value="Underscore" />
      <xs:enumeration value="BackQuote" />
      <xs:enumeration value="A" />
      <xs:enumeration value="B" />
      <xs:enumeration value="C" />
      <xs:enumeration value="D" />
      <xs:enumeration value="E" />
      <xs:enumeration value="F" />
      <xs:enumeration value="G" />
      <xs:enumeration value="H" />
      <xs:enumeration value="I" />
      <xs:enumeration value="J" />
      <xs:enumeration value="K" />
      <xs:enumeration value="L" />
      <xs:enumeration value="M" />
      <xs:enumeration value="N" />
      <xs:enumeration value="O" />
      <xs:enumeration value="P" />
      <xs:enumeration value="Q" />
      <xs:enumeration value="R" />
      <xs:enumeration value="S" />
      <xs:enumeration value="T" />
      <xs:enumeration value="U" />
      <xs:enumeration value="V" />
      <xs:enumeration value="W" />
      <xs:enumeration value="X" />
      <xs:enumeration value="Y" />
      <xs:enumeration value="Z" />
      <xs:enumeration value="LeftCurlyBracket" />
      <xs:enumeration value="Pipe" />
      <xs:enumeration value="RightCurlyBracket" />
      <xs:enumeration value="Tilde" />
      <xs:enumeration value="Delete" />
      <xs:enumeration value="Keypad0" />
      <xs:enumeration value="Keypad1" />
      <xs:enumeration value="Keypad2" />
      <xs:enumeration value="Keypad3" />
      <xs:enumeration value="Keypad4" />
      <xs:enumeration value="Keypad5" />
      <xs:enumeration value="Keypad6" />
      <xs:enumeration value="Keypad7" />
      <xs:enumeration value="Keypad8" />
      <xs:enumeration value="Keypad9" />
      <xs:enumeration value="KeypadPeriod" />
      <xs:enumeration value="KeypadDivide" />
      <xs:enumeration value="KeypadMultiply" />
      <xs:enumeration value="KeypadMinus" />
      <xs:enumeration value="KeypadPlus" />
      <xs:enumeration value="KeypadEnter" />
      <xs:enumeration value="KeypadEquals" />
      <xs:enumeration value="UpArrow" />
      <xs:enumeration value="DownArrow" />
      <xs:enumeration value="RightArrow" />
      <xs:enumeration value="LeftArrow" />
      <xs:enumeration value="Insert" />
      <xs:enumeration value="Home" />
      <xs:enumeration value="End" />
      <xs:enumeration value="PageUp" />
      <xs:enumeration value="PageDown" />
      <xs:enumeration value="F1" />
      <xs:enumeration value="F2" />
      <xs:enumeration value="F3" />
      <xs:enumeration value="F4" />
      <xs:enumeration value="F5" />
      <xs:enumeration value="F6" />
      <xs:enumeration value="F7" />
      <xs:enumeration value="F8" />
      <xs:enumeration value="F9" />
      <xs:enumeration value="F10" />
      <xs:enumeration value="F11" />
      <xs:enumeration value="F12" />
      <xs:enumeration value="F13" />
      <xs:enumeration value="F14" />
      <xs:enumeration value="F15" />
      <xs:enumeration value="Numlock" />
      <xs:enumeration value="CapsLock" />
      <xs:enumeration value="ScrollLock" />
      <xs:enumeration value="RightShift" />
      <xs:enumeration value="LeftShift" />
      <xs:enumeration value="RightControl" />
      <xs:enumeration value="LeftControl" />
      <xs:enumeration value="RightAlt" />
      <xs:enumeration value="LeftAlt" />
      <xs:enumeration value="RightMeta" />
      <xs:enumeration value="RightCommand" />
      <xs:enumeration value="RightApple" />
      <xs:enumeration value="LeftMeta" />
      <xs:enumeration value="LeftCommand" />
      <xs:enumeration value="LeftApple" />
      <xs:enumeration value="LeftWindows" />
      <xs:enumeration value="RightWindows" />
      <xs:enumeration value="AltGr" />
      <xs:enumeration value="Help" />
      <xs:enumeration value="Print" />
      <xs:enumeration value="SysReq" />
      <xs:enumeration value="Break" />
      <xs:enumeration value="Menu" />
      <xs:enumeration value="Mouse0" />
      <xs:enumeration value="Mouse1" />
      <xs:enumeration value="Mouse2" />
      <xs:enumeration value="Mouse3" />
      <xs:enumeration value="Mouse4" />
      <xs:enumeration value="Mouse5" />
      <xs:enumeration value="Mouse6" />
      <xs:enumeration value="JoystickButton0" />
      <xs:enumeration value="JoystickButton1" />
      <xs:enumeration value="JoystickButton2" />
      <xs:enumeration value="JoystickButton3" />
      <xs:enumeration value="JoystickButton4" />
      <xs:enumeration value="JoystickButton5" />
      <xs:enumeration value="JoystickButton6" />
      <xs:enumeration value="JoystickButton7" />
      <xs:enumeration value="JoystickButton8" />
      <xs:enumeration value="JoystickButton9" />
      <xs:enumeration value="JoystickButton10" />
      <xs:enumeration value="JoystickButton11" />
      <xs:enumeration value="JoystickButton12" />
      <xs:enumeration value="JoystickButton13" />
      <xs:enumeration value="JoystickButton14" />
      <xs:enumeration value="JoystickButton15" />
      <xs:enumeration value="JoystickButton16" />
      <xs:enumeration value="JoystickButton17" />
      <xs:enumeration value="JoystickButton18" />
      <xs:enumeration value="JoystickButton19" />
      <xs:enumeration value="Joystick1Button0" />
      <xs:enumeration value="Joystick1Button1" />
      <xs:enumeration value="Joystick1Button2" />
      <xs:enumeration value="Joystick1Button3" />
      <xs:enumeration value="Joystick1Button4" />
      <xs:enumeration value="Joystick1Button5" />
      <xs:enumeration value="Joystick1Button6" />
      <xs:enumeration value="Joystick1Button7" />
      <xs:enumeration value="Joystick1Button8" />
      <xs:enumeration value="Joystick1Button9" />
      <xs:enumeration value="Joystick1Button10" />
      <xs:enumeration value="Joystick1Button11" />
      <xs:enumeration value="Joystick1Button12" />
      <xs:enumeration value="Joystick1Button13" />
      <xs:enumeration value="Joystick1Button14" />
      <xs:enumeration value="Joystick1Button15" />
      <xs:enumeration value="Joystick1Button16" />
      <xs:enumeration value="Joystick1Button17" />
      <xs:enumeration value="Joystick1Button18" />
      <xs:enumeration value="Joystick1Button19" />
      <xs:enumeration value="Joystick2Button0" />
      <xs:enumeration value="Joystick2Button1" />
      <xs:enumeration value="Joystick2Button2" />
      <xs:enumeration value="Joystick2Button3" />
      <xs:enumeration value="Joystick2Button4" />
      <xs:enumeration value="Joystick2Button5" />
      <xs:enumeration value="Joystick2Button6" />
      <xs:enumeration value="Joystick2Button7" />
      <xs:enumeration value="Joystick2Button8" />
      <xs:enumeration value="Joystick2Button9" />
      <xs:enumeration value="Joystick2Button10" />
      <xs:enumeration value="Joystick2Button11" />
      <xs:enumeration value="Joystick2Button12" />
      <xs:enumeration value="Joystick2Button13" />
      <xs:enumeration value="Joystick2Button14" />
      <xs:enumeration value="Joystick2Button15" />
      <xs:enumeration value="Joystick2Button16" />
      <xs:enumeration value="Joystick2Button17" />
      <xs:enumeration value="Joystick2Button18" />
      <xs:enumeration value="Joystick2Button19" />
      <xs:enumeration value="Joystick3Button0" />
      <xs:enumeration value="Joystick3Button1" />
      <xs:enumeration value="Joystick3Button2" />
      <xs:enumeration value="Joystick3Button3" />
      <xs:enumeration value="Joystick3Button4" />
      <xs:enumeration value="Joystick3Button5" />
      <xs:enumeration value="Joystick3Button6" />
      <xs:enumeration value="Joystick3Button7" />
      <xs:enumeration value="Joystick3Button8" />
      <xs:enumeration value="Joystick3Button9" />
      <xs:enumeration value="Joystick3Button10" />
      <xs:enumeration value="Joystick3Button11" />
      <xs:enumeration value="Joystick3Button12" />
      <xs:enumeration value="Joystick3Button13" />
      <xs:enumeration value="Joystick3Button14" />
      <xs:enumeration value="Joystick3Button15" />
      <xs:enumeration value="Joystick3Button16" />
      <xs:enumeration value="Joystick3Button17" />
      <xs:enumeration value="Joystick3Button18" />
      <xs:enumeration value="Joystick3Button19" />
      <xs:enumeration value="Joystick4Button0" />
      <xs:enumeration value="Joystick4Button1" />
      <xs:enumeration value="Joystick4Button2" />
      <xs:enumeration value="Joystick4Button3" />
      <xs:enumeration value="Joystick4Button4" />
      <xs:enumeration value="Joystick4Button5" />
      <xs:enumeration value="Joystick4Button6" />
      <xs:enumeration value="Joystick4Button7" />
      <xs:enumeration value="Joystick4Button8" />
      <xs:enumeration value="Joystick4Button9" />
      <xs:enumeration value="Joystick4Button10" />
      <xs:enumeration value="Joystick4Button11" />
      <xs:enumeration value="Joystick4Button12" />
      <xs:enumeration value="Joystick4Button13" />
      <xs:enumeration value="Joystick4Button14" />
      <xs:enumeration value="Joystick4Button15" />
      <xs:enumeration value="Joystick4Button16" />
      <xs:enumeration value="Joystick4Button17" />
      <xs:enumeration value="Joystick4Button18" />
      <xs:enumeration value="Joystick4Button19" />
      <xs:enumeration value="Joystick5Button0" />
      <xs:enumeration value="Joystick5Button1" />
      <xs:enumeration value="Joystick5Button2" />
      <xs:enumeration value="Joystick5Button3" />
      <xs:enumeration value="Joystick5Button4" />
      <xs:enumeration value="Joystick5Button5" />
      <xs:enumeration value="Joystick5Button6" />
      <xs:enumeration value="Joystick5Button7" />
      <xs:enumeration value="Joystick5Button8" />
      <xs:enumeration value="Joystick5Button9" />
      <xs:enumeration value="Joystick5Button10" />
      <xs:enumeration value="Joystick5Button11" />
      <xs:enumeration value="Joystick5Button12" />
      <xs:enumeration value="Joystick5Button13" />
      <xs:enumeration value="Joystick5Button14" />
      <xs:enumeration value="Joystick5Button15" />
      <xs:enumeration value="Joystick5Button16" />
      <xs:enumeration value="Joystick5Button17" />
      <xs:enumeration value="Joystick5Button18" />
      <xs:enumeration value="Joystick5Button19" />
      <xs:enumeration value="Joystick6Button0" />
      <xs:enumeration value="Joystick6Button1" />
      <xs:enumeration value="Joystick6Button2" />
      <xs:enumeration value="Joystick6Button3" />
      <xs:enumeration value="Joystick6Button4" />
      <xs:enumeration value="Joystick6Button5" />
      <xs:enumeration value="Joystick6Button6" />
      <xs:enumeration value="Joystick6Button7" />
      <xs:enumeration value="Joystick6Button8" />
      <xs:enumeration value="Joystick6Button9" />
      <xs:enumeration value="Joystick6Button10" />
      <xs:enumeration value="Joystick6Button11" />
      <xs:enumeration value="Joystick6Button12" />
      <xs:enumeration value="Joystick6Button13" />
      <xs:enumeration value="Joystick6Button14" />
      <xs:enumeration value="Joystick6Button15" />
      <xs:enumeration value="Joystick6Button16" />
      <xs:enumeration value="Joystick6Button17" />
      <xs:enumeration value="Joystick6Button18" />
      <xs:enumeration value="Joystick6Button19" />
      <xs:enumeration value="Joystick7Button0" />
      <xs:enumeration value="Joystick7Button1" />
      <xs:enumeration value="Joystick7Button2" />
      <xs:enumeration value="Joystick7Button3" />
      <xs:enumeration value="Joystick7Button4" />
      <xs:enumeration value="Joystick7Button5" />
      <xs:enumeration value="Joystick7Button6" />
      <xs:enumeration value="Joystick7Button7" />
      <xs:enumeration value="Joystick7Button8" />
      <xs:enumeration value="Joystick7Button9" />
      <xs:enumeration value="Joystick7Button10" />
      <xs:enumeration value="Joystick7Button11" />
      <xs:enumeration value="Joystick7Button12" />
      <xs:enumeration value="Joystick7Button13" />
      <xs:enumeration value="Joystick7Button14" />
      <xs:enumeration value="Joystick7Button15" />
      <xs:enumeration value="Joystick7Button16" />
      <xs:enumeration value="Joystick7Button17" />
      <xs:enumeration value="Joystick7Button18" />
      <xs:enumeration value="Joystick7Button19" />
      <xs:enumeration value="Joystick8Button0" />
      <xs:enumeration value="Joystick8Button1" />
      <xs:enumeration value="Joystick8Button2" />
      <xs:enumeration value="Joystick8Button3" />
      <xs:enumeration value="Joystick8Button4" />
      <xs:enumeration value="Joystick8Button5" />
      <xs:enumeration value="Joystick8Button6" />
      <xs:enumeration value="Joystick8Button7" />
      <xs:enumeration value="Joystick8Button8" />
      <xs:enumeration value="Joystick8Button9" />
      <xs:enumeration value="Joystick8Button10" />
      <xs:enumeration value="Joystick8Button11" />
      <xs:enumeration value="Joystick8Button12" />
      <xs:enumeration value="Joystick8Button13" />
      <xs:enumeration value="Joystick8Button14" />
      <xs:enumeration value="Joystick8Button15" />
      <xs:enumeration value="Joystick8Button16" />
      <xs:enumeration value="Joystick8Button17" />
      <xs:enumeration value="Joystick8Button18" />
      <xs:enumeration value="Joystick8Button19" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AutomaticPauseMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Never" />
      <xs:enumeration value="MajorThreat" />
      <xs:enumeration value="AnyThreat" />
      <xs:enumeration value="AnyLetter" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VerbCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="BeatFire" />
      <xs:enumeration value="Ignite" />
      <xs:enumeration value="Misc" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Faction">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="loadID" type="xs:int" />
      <xs:element name="randomKey" type="xs:int" />
      <xs:element name="colorFromSpectrum" type="xs:float" />
      <xs:element name="defeated" type="StrBoolean" />
      <xs:element name="lastTraderRequestTick" type="xs:int" />
      <xs:element name="lastOrbitalTraderRequestTick" type="xs:int" />
      <xs:element name="lastMilitaryAidRequestTick" type="xs:int" />
      <xs:element name="lastExecutionTick" type="xs:int" />
      <xs:element name="allowRoyalFavorRewards" type="StrBoolean" />
      <xs:element name="allowGoodwillRewards" type="StrBoolean" />
      <xs:element name="questTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="color" type="Color" />
      <xs:element name="allegianceColor" type="Color" />
      <xs:element name="hidden" type="Boolean" />
      <xs:element name="temporary" type="StrBoolean" />
      <xs:element name="factionHostileOnHarmByPlayer" type="StrBoolean" />
      <xs:element name="neverFlee" type="StrBoolean" />
      <xs:element name="deactivated" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="ThingCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Pawn" />
      <xs:enumeration value="Item" />
      <xs:enumeration value="Building" />
      <xs:enumeration value="Plant" />
      <xs:enumeration value="Projectile" />
      <xs:enumeration value="Filth" />
      <xs:enumeration value="Gas" />
      <xs:enumeration value="Attachment" />
      <xs:enumeration value="Mote" />
      <xs:enumeration value="Ethereal" />
      <xs:enumeration value="PsychicEmitter" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="TargetingParameters">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="canTargetLocations" type="StrBoolean" />
      <xs:element name="canTargetSelf" type="StrBoolean" />
      <xs:element name="canTargetPawns" type="StrBoolean" />
      <xs:element name="canTargetFires" type="StrBoolean" />
      <xs:element name="canTargetBuildings" type="StrBoolean" />
      <xs:element name="canTargetItems" type="StrBoolean" />
      <xs:element name="canTargetAnimals" type="StrBoolean" />
      <xs:element name="canTargetHumans" type="StrBoolean" />
      <xs:element name="canTargetMechs" type="StrBoolean" />
      <xs:element name="canTargetPlants" type="StrBoolean" />
      <xs:element name="canTargetSubhumans" type="StrBoolean" />
      <xs:element name="canTargetEntities" type="StrBoolean" />
      <xs:element name="onlyTargetFactions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Faction" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="onlyTargetFlammables" type="StrBoolean" />
      <xs:element name="mustBeSelectable" type="StrBoolean" />
      <xs:element name="neverTargetDoors" type="StrBoolean" />
      <xs:element name="neverTargetIncapacitated" type="StrBoolean" />
      <xs:element name="neverTargetHostileFaction" type="StrBoolean" />
      <xs:element name="onlyTargetSameIdeo" type="StrBoolean" />
      <xs:element name="onlyTargetThingsAffectingRegions" type="StrBoolean" />
      <xs:element name="onlyTargetDamagedThings" type="StrBoolean" />
      <xs:element name="mapObjectTargetsMustBeAutoAttackable" type="StrBoolean" />
      <xs:element name="onlyTargetIncapacitatedPawns" type="StrBoolean" />
      <xs:element name="onlyTargetColonistsOrPrisoners" type="StrBoolean" />
      <xs:element name="onlyTargetColonistsOrPrisonersOrSlaves" type="StrBoolean" />
      <xs:element name="onlyTargetColonistsOrPrisonersOrSlavesAllowMinorMentalBreaks" type="StrBoolean" />
      <xs:element name="onlyTargetControlledPawns" type="StrBoolean" />
      <xs:element name="onlyTargetColonists" type="StrBoolean" />
      <xs:element name="onlyTargetPrisonersOfColony" type="StrBoolean" />
      <xs:element name="onlyTargetPsychicSensitive" type="StrBoolean" />
      <xs:element name="onlyTargetAnimaTrees" type="StrBoolean" />
      <xs:element name="canTargetBloodfeeders" type="StrBoolean" />
      <xs:element name="onlyRepairableMechs" type="StrBoolean" />
      <xs:element name="thingCategory" type="ThingCategory" />
      <xs:element name="onlyTargetDoors" type="StrBoolean" />
      <xs:element name="canTargetCorpses" type="StrBoolean" />
      <xs:element name="onlyTargetCorpses" type="StrBoolean" />
      <xs:element name="mapBoundsContractedBy" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ExtraDamage">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="amount" type="xs:float" />
      <xs:element name="armorPenetration" type="xs:float" />
      <xs:element name="chance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SurpriseAttackProps">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="extraMeleeDamages">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ExtraDamage" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="Intelligence">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Animal" />
      <xs:enumeration value="ToolUser" />
      <xs:enumeration value="Humanlike" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VerbProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="category" type="VerbCategory" />
      <xs:element name="verbClass" type="xs:string" />
      <xs:element name="label" type="xs:string" />
      <xs:element name="isPrimary" type="StrBoolean" />
      <xs:element name="violent" type="StrBoolean" />
      <xs:element name="minRange" type="xs:float" />
      <xs:element name="range" type="xs:float" />
      <xs:element name="rangeStat" type="xs:string" />
      <xs:element name="burstShotCount" type="xs:int" />
      <xs:element name="ticksBetweenBurstShots" type="xs:int" />
      <xs:element name="showBurstShotStats" type="StrBoolean" />
      <xs:element name="noiseRadius" type="xs:float" />
      <xs:element name="hasStandardCommand" type="StrBoolean" />
      <xs:element name="targetable" type="StrBoolean" />
      <xs:element name="nonInterruptingSelfCast" type="StrBoolean" />
      <xs:element name="targetParams" type="TargetingParameters" />
      <xs:element name="requireLineOfSight" type="StrBoolean" />
      <xs:element name="mustCastOnOpenGround" type="StrBoolean" />
      <xs:element name="forceNormalTimeSpeed" type="StrBoolean" />
      <xs:element name="onlyManualCast" type="StrBoolean" />
      <xs:element name="stopBurstWithoutLos" type="StrBoolean" />
      <xs:element name="surpriseAttack" type="SurpriseAttackProps" />
      <xs:element name="commonality" type="xs:float" />
      <xs:element name="minIntelligence" type="Intelligence" />
      <xs:element name="consumeFuelPerShot" type="xs:float" />
      <xs:element name="consumeFuelPerBurst" type="xs:float" />
      <xs:element name="stunTargetOnCastStart" type="StrBoolean" />
      <xs:element name="invalidTargetPawn" type="xs:string" />
      <xs:element name="commonalityVsEdificeFactor" type="xs:float" />
      <xs:element name="useableInPocketMaps" type="StrBoolean" />
      <xs:element name="useableInVacuum" type="StrBoolean" />
      <xs:element name="mouseTargetingText" type="xs:string" />
      <xs:element name="layerWhitelist">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="layerBlacklist">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="warmupTime" type="xs:float" />
      <xs:element name="defaultCooldownTime" type="xs:float" />
      <xs:element name="commandIcon" type="xs:string" />
      <xs:element name="soundCast" type="xs:string" />
      <xs:element name="soundCastTail" type="xs:string" />
      <xs:element name="soundAiming" type="xs:string" />
      <xs:element name="muzzleFlashScale" type="xs:float" />
      <xs:element name="impactMote" type="xs:string" />
      <xs:element name="impactFleck" type="xs:string" />
      <xs:element name="drawAimPie" type="StrBoolean" />
      <xs:element name="warmupEffecter" type="xs:string" />
      <xs:element name="drawHighlightWithLineOfSight" type="StrBoolean" />
      <xs:element name="aimingLineMote" type="xs:string" />
      <xs:element name="aimingLineMoteFixedLength" type="xs:float" />
      <xs:element name="aimingChargeMote" type="xs:string" />
      <xs:element name="aimingChargeMoteOffset" type="xs:float" />
      <xs:element name="aimingTargetMote" type="xs:string" />
      <xs:element name="aimingTargetEffecter" type="xs:string" />
      <xs:element name="explosionRadiusRingColor" type="Color" />
      <xs:element name="linkedBodyPartsGroup" type="xs:string" />
      <xs:element name="ensureLinkedBodyPartsGroupAlwaysUsable" type="StrBoolean" />
      <xs:element name="meleeDamageDef" type="xs:string" />
      <xs:element name="meleeDamageBaseAmount" type="xs:int" />
      <xs:element name="meleeArmorPenetrationBase" type="xs:float" />
      <xs:element name="ai_IsWeapon" type="StrBoolean" />
      <xs:element name="ai_IsBuildingDestroyer" type="StrBoolean" />
      <xs:element name="ai_AvoidFriendlyFireRadius" type="xs:float" />
      <xs:element name="ai_RangedAlawaysShootGroundBelowTarget" type="StrBoolean" />
      <xs:element name="ai_IsDoorDestroyer" type="StrBoolean" />
      <xs:element name="ai_ProjectileLaunchingIgnoresMeleeThreats" type="StrBoolean" />
      <xs:element name="ai_TargetHasRangedAttackScoreOffset" type="xs:float" />
      <xs:element name="defaultProjectile" type="xs:string" />
      <xs:element name="forcedMissEvenDispersal" type="StrBoolean" />
      <xs:element name="accuracyTouch" type="xs:float" />
      <xs:element name="accuracyShort" type="xs:float" />
      <xs:element name="accuracyMedium" type="xs:float" />
      <xs:element name="accuracyLong" type="xs:float" />
      <xs:element name="canGoWild" type="StrBoolean" />
      <xs:element name="beamDamageDef" type="xs:string" />
      <xs:element name="beamWidth" type="xs:float" />
      <xs:element name="beamMaxDeviation" type="xs:float" />
      <xs:element name="beamGroundFleckDef" type="xs:string" />
      <xs:element name="beamEndEffecterDef" type="xs:string" />
      <xs:element name="beamMoteDef" type="xs:string" />
      <xs:element name="beamFleckChancePerTick" type="xs:float" />
      <xs:element name="beamCurvature" type="xs:float" />
      <xs:element name="beamChanceToStartFire" type="xs:float" />
      <xs:element name="beamChanceToAttachFire" type="xs:float" />
      <xs:element name="beamStartOffset" type="xs:float" />
      <xs:element name="beamFullWidthRange" type="xs:float" />
      <xs:element name="beamLineFleckDef" type="xs:string" />
      <xs:element name="beamFireSizeRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="soundCastBeam" type="xs:string" />
      <xs:element name="beamTargetsGround" type="StrBoolean" />
      <xs:element name="beamSetsGroundOnFire" type="StrBoolean" />
      <xs:element name="beamTotalDamage" type="xs:float" />
      <xs:element name="beamHitsNeighborCells" type="StrBoolean" />
      <xs:element name="beamCantHitWithinMinRange" type="StrBoolean" />
      <xs:element name="beamHitsNeighborCellsRequiresLOS" type="StrBoolean" />
      <xs:element name="ai_BeamIsIncendiary" type="StrBoolean" />
      <xs:element name="sprayWidth" type="xs:float" />
      <xs:element name="sprayArching" type="xs:float" />
      <xs:element name="sprayNumExtraCells" type="xs:int" />
      <xs:element name="sprayThicknessCells" type="xs:int" />
      <xs:element name="sprayEffecterDef" type="xs:string" />
      <xs:element name="highlightColor" type="Color" />
      <xs:element name="secondaryHighlightColor" type="Color" />
      <xs:element name="spawnDef" type="xs:string" />
      <xs:element name="colonyWideTaleDef" type="xs:string" />
      <xs:element name="affectedCellCount" type="xs:int" />
      <xs:element name="bodypartTagTarget" type="xs:string" />
      <xs:element name="rangedFireRulepack" type="xs:string" />
      <xs:element name="soundLanding" type="xs:string" />
      <xs:element name="flightEffecterDef" type="xs:string" />
      <xs:element name="flyWithCarriedThing" type="StrBoolean" />
      <xs:element name="workModeDef" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PocketMapProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="biome" type="xs:string" />
      <xs:element name="tileMutators">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="temperature" type="xs:float" />
      <xs:element name="destroyOnParentMapAbandoned" type="StrBoolean" />
      <xs:element name="preventPrisonerEscape" type="StrBoolean" />
      <xs:element name="canLaunchGravship" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="MentalStateCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Aggro" />
      <xs:enumeration value="Malicious" />
      <xs:enumeration value="Misc" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DrugCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Medical" />
      <xs:enumeration value="Social" />
      <xs:enumeration value="Hard" />
      <xs:enumeration value="Any" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DebrisGraphic">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="graphicData" type="GraphicData" />
      <xs:element name="weighting" type="xs:float" />
      <xs:element name="order" type="xs:int" />
      <xs:element name="parallaxPer10Cells" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="IngredientCount">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="SpecialProductType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Butchery" />
      <xs:enumeration value="Smelted" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SkillRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="skill" type="xs:string" />
      <xs:element name="minLevel" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="TechLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Animal" />
      <xs:enumeration value="Neolithic" />
      <xs:enumeration value="Medieval" />
      <xs:enumeration value="Industrial" />
      <xs:enumeration value="Spacer" />
      <xs:enumeration value="Ultra" />
      <xs:enumeration value="Archotech" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DifficultyConditionConfig">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="bigThreatsDisabled" type="StrBoolean" />
      <xs:element name="trapsDisabled" type="StrBoolean" />
      <xs:element name="turretsDisabled" type="StrBoolean" />
      <xs:element name="mortarsDisabled" type="StrBoolean" />
      <xs:element name="extremeWeatherIncidentsDisabled" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RoomStatScoreStage">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="minScore" type="xs:float" />
      <xs:element name="label" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="Material">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="TimeOfDay">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Night" />
      <xs:enumeration value="Day" />
      <xs:enumeration value="Any" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Season">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Spring" />
      <xs:enumeration value="Summer" />
      <xs:enumeration value="Fall" />
      <xs:enumeration value="Winter" />
      <xs:enumeration value="PermanentSummer" />
      <xs:enumeration value="PermanentWinter" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SoundContext">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Any" />
      <xs:enumeration value="MapOnly" />
      <xs:enumeration value="WorldOnly" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VoicePriorityMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PrioritizeNewest" />
      <xs:enumeration value="PrioritizeExisting" />
      <xs:enumeration value="PrioritizeNearest" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="AudioGrain">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="RepeatSelectMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Any" />
      <xs:enumeration value="NeverTwice" />
      <xs:enumeration value="NeverLastHalf" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SoundParamSource">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SoundParamTarget">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="SoundParamUpdateMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Constant" />
      <xs:enumeration value="OncePerSample" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SoundParameterMapping">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="inParam" type="SoundParamSource" />
      <xs:element name="outParam" type="SoundParamTarget" />
      <xs:element name="paramUpdateMode" type="SoundParamUpdateMode" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SoundFilter">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SubSoundDef">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="name" type="xs:string" />
      <xs:element name="onCamera" type="StrBoolean" />
      <xs:element name="muteWhenPaused" type="StrBoolean" />
      <xs:element name="tempoAffectedByGameSpeed" type="StrBoolean" />
      <xs:element name="grains">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="AudioGrain" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="volumeRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="pitchRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="distRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="repeatMode" type="RepeatSelectMode" />
      <xs:element name="paramMappings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="SoundParameterMapping" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="filters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="SoundFilter" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="startDelayRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="gameSpeedRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="tag" type="xs:string" />
      <xs:element name="sustainLoop" type="StrBoolean" />
      <xs:element name="sustainLoopDurationRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="sustainIntervalRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="sustainAttack" type="xs:float" />
      <xs:element name="sustainSkipFirstAttack" type="StrBoolean" />
      <xs:element name="sustainRelease" type="xs:float" />
      <xs:element name="randomStartPoint" type="StrBoolean" />
      <xs:element name="canVacuumDampen" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ThingDefStyle">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="RenderTextureFormat">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ARGB32" />
      <xs:enumeration value="Depth" />
      <xs:enumeration value="ARGBHalf" />
      <xs:enumeration value="Shadowmap" />
      <xs:enumeration value="RGB565" />
      <xs:enumeration value="ARGB4444" />
      <xs:enumeration value="ARGB1555" />
      <xs:enumeration value="Default" />
      <xs:enumeration value="ARGB2101010" />
      <xs:enumeration value="DefaultHDR" />
      <xs:enumeration value="ARGB64" />
      <xs:enumeration value="ARGBFloat" />
      <xs:enumeration value="RGFloat" />
      <xs:enumeration value="RGHalf" />
      <xs:enumeration value="RFloat" />
      <xs:enumeration value="RHalf" />
      <xs:enumeration value="R8" />
      <xs:enumeration value="ARGBInt" />
      <xs:enumeration value="RGInt" />
      <xs:enumeration value="RInt" />
      <xs:enumeration value="BGRA32" />
      <xs:enumeration value="RGB111110Float" />
      <xs:enumeration value="RG32" />
      <xs:enumeration value="RGBAUShort" />
      <xs:enumeration value="RG16" />
      <xs:enumeration value="BGRA10101010_XR" />
      <xs:enumeration value="BGR101010_XR" />
      <xs:enumeration value="R16" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TerrainEdgeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Hard" />
      <xs:enumeration value="Fade" />
      <xs:enumeration value="FadeRough" />
      <xs:enumeration value="Water" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Tool">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="label" type="xs:string" />
      <xs:element name="labelNoLocation" type="xs:string" />
      <xs:element name="labelUsedInLogging" type="StrBoolean" />
      <xs:element name="capacities">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="power" type="xs:float" />
      <xs:element name="armorPenetration" type="xs:float" />
      <xs:element name="cooldownTime" type="xs:float" />
      <xs:element name="surpriseAttack" type="SurpriseAttackProps" />
      <xs:element name="hediff" type="xs:string" />
      <xs:element name="chanceFactor" type="xs:float" />
      <xs:element name="alwaysTreatAsWeapon" type="StrBoolean" />
      <xs:element name="extraMeleeDamages">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ExtraDamage" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="soundMeleeHit" type="xs:string" />
      <xs:element name="soundMeleeMiss" type="xs:string" />
      <xs:element name="linkedBodyPartsGroup" type="xs:string" />
      <xs:element name="ensureLinkedBodyPartsGroupAlwaysUsable" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="TerrainCategoryType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Misc" />
      <xs:enumeration value="Soil" />
      <xs:enumeration value="Stone" />
      <xs:enumeration value="Sand" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WaterBodyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Freshwater" />
      <xs:enumeration value="Saltwater" />
      <xs:enumeration value="Other" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ColorInt">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="r" type="xs:int" />
      <xs:element name="g" type="xs:int" />
      <xs:element name="b" type="xs:int" />
      <xs:element name="a" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="TerrainFleckData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="fleck" type="xs:string" />
      <xs:element name="velocitySpeedRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="velocityAngleRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="rotationSpeedRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="solidTicksRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="scaleRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="TempTerrainProps">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="terrainOnRemoved" type="xs:string" />
      <xs:element name="destroysFloors" type="StrBoolean" />
      <xs:element name="removedByExplosions" type="StrBoolean" />
      <xs:element name="replaceableByBridge" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="FilthSourceFlags">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Terrain" />
      <xs:enumeration value="Natural" />
      <xs:enumeration value="Unnatural" />
      <xs:enumeration value="Pawn" />
      <xs:enumeration value="Any" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SpaceEdgeGraphicData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="OShapeTexPath" type="xs:string" />
      <xs:element name="UShapeTexPath" type="xs:string" />
      <xs:element name="CornerInnerTexPath" type="xs:string" />
      <xs:element name="CornerOuterTexPath" type="xs:string" />
      <xs:element name="FlatTexPath" type="xs:string" />
      <xs:element name="LoopLeftTexPath" type="xs:string" />
      <xs:element name="LoopRightTexPath" type="xs:string" />
      <xs:element name="LoopSingleTexPath" type="xs:string" />
      <xs:element name="loopTexPaths">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="overrideColor" type="Color" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="Traversability">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Standable" />
      <xs:enumeration value="PassThroughOnly" />
      <xs:enumeration value="Impassable" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="CostListForDifficulty">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="difficultyVar" type="xs:string" />
      <xs:element name="costList">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ThingDefCountClass" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="costStuffCount" type="xs:int" />
      <xs:element name="invert" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="AltitudeLayer">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BelowTerrain" />
      <xs:enumeration value="TerrainEdges" />
      <xs:enumeration value="Terrain" />
      <xs:enumeration value="TerrainScatter" />
      <xs:enumeration value="Floor" />
      <xs:enumeration value="Conduits" />
      <xs:enumeration value="FloorCoverings" />
      <xs:enumeration value="FloorEmplacement" />
      <xs:enumeration value="Filth" />
      <xs:enumeration value="Zone" />
      <xs:enumeration value="SmallWire" />
      <xs:enumeration value="LowPlant" />
      <xs:enumeration value="MoteLow" />
      <xs:enumeration value="Shadows" />
      <xs:enumeration value="DoorMoveable" />
      <xs:enumeration value="Building" />
      <xs:enumeration value="BuildingBelowTop" />
      <xs:enumeration value="BuildingOnTop" />
      <xs:enumeration value="Item" />
      <xs:enumeration value="ItemImportant" />
      <xs:enumeration value="LayingPawn" />
      <xs:enumeration value="PawnRope" />
      <xs:enumeration value="Projectile" />
      <xs:enumeration value="Pawn" />
      <xs:enumeration value="PawnUnused" />
      <xs:enumeration value="PawnState" />
      <xs:enumeration value="Blueprint" />
      <xs:enumeration value="MoteOverheadLow" />
      <xs:enumeration value="MoteOverhead" />
      <xs:enumeration value="Gas" />
      <xs:enumeration value="Skyfaller" />
      <xs:enumeration value="Weather" />
      <xs:enumeration value="LightingOverlay" />
      <xs:enumeration value="VisEffects" />
      <xs:enumeration value="FogOfWar" />
      <xs:enumeration value="Darkness" />
      <xs:enumeration value="WorldClipper" />
      <xs:enumeration value="Silhouettes" />
      <xs:enumeration value="MapDataOverlay" />
      <xs:enumeration value="MetaOverlays" />
      <xs:enumeration value="_Count" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ColorForStuff">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="IconForStuffAppearance">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="TickerType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Never" />
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Rare" />
      <xs:enumeration value="Long" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IntVec2">
    <xs:restriction base="xs:string">
      <xs:pattern value="\(\s*-?\d+\s*,\s*-?\d+\s*\)" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="CompProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="compClass" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ThingDefCountRangeClass">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="thingDef" type="xs:string" />
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DamageMultiplier">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="damageDef" type="xs:string" />
      <xs:element name="multiplier" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RecipeMakerProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="label" type="xs:string" />
      <xs:element name="productCount" type="xs:int" />
      <xs:element name="targetCountAdjustment" type="xs:int" />
      <xs:element name="bulkRecipeCount" type="xs:int" />
      <xs:element name="useIngredientsForColor" type="StrBoolean" />
      <xs:element name="workAmount" type="xs:int" />
      <xs:element name="workSpeedStat" type="xs:string" />
      <xs:element name="efficiencyStat" type="xs:string" />
      <xs:element name="unfinishedThingDef" type="xs:string" />
      <xs:element name="skillRequirements">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="SkillRequirement" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="workSkill" type="xs:string" />
      <xs:element name="workSkillLearnPerTick" type="xs:float" />
      <xs:element name="requiredGiverWorkType" type="xs:string" />
      <xs:element name="effectWorking" type="xs:string" />
      <xs:element name="soundWorking" type="xs:string" />
      <xs:element name="recipeUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="researchPrerequisite" type="xs:string" />
      <xs:element name="memePrerequisitesAny">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="researchPrerequisites">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="factionPrerequisiteTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="mechanitorOnlyRecipe" type="StrBoolean" />
      <xs:element name="fromIdeoBuildingPreceptOnly" type="StrBoolean" />
      <xs:element name="displayPriority" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="IntVec3">
    <xs:restriction base="xs:string">
      <xs:pattern value="\(\s*-?\d+\s*,\s*-?\d+\s*,\s*-?\d+\s*\)" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DrawerType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="RealtimeOnly" />
      <xs:enumeration value="MapMeshOnly" />
      <xs:enumeration value="MapMeshAndRealTime" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ColorGenerator">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ThingStyleChance">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="ResourceCountPriority">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Uncounted" />
      <xs:enumeration value="Last" />
      <xs:enumeration value="Middle" />
      <xs:enumeration value="First" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SurfaceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Item" />
      <xs:enumeration value="Eat" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Tradeability">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Sellable" />
      <xs:enumeration value="Buyable" />
      <xs:enumeration value="All" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EquipmentType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Primary" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="IngestionOutcomeDoer">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="chance" type="xs:float" />
      <xs:element name="doToGeneratedPawnIfAddicted" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="HoldOffset">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="offset" type="Vector3" />
      <xs:element name="flip" type="StrBoolean" />
      <xs:element name="behind" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="HoldOffsetSet">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="northDefault" type="HoldOffset" />
      <xs:element name="east" type="HoldOffset" />
      <xs:element name="south" type="HoldOffset" />
      <xs:element name="west" type="HoldOffset" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="FoodTypeFlags">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="VegetableOrFruit" />
      <xs:enumeration value="Meat" />
      <xs:enumeration value="Fluid" />
      <xs:enumeration value="Corpse" />
      <xs:enumeration value="CarnivoreAnimalStrict" />
      <xs:enumeration value="Seed" />
      <xs:enumeration value="AnimalProduct" />
      <xs:enumeration value="Plant" />
      <xs:enumeration value="Tree" />
      <xs:enumeration value="Meal" />
      <xs:enumeration value="Processed" />
      <xs:enumeration value="Liquor" />
      <xs:enumeration value="Kibble" />
      <xs:enumeration value="CarnivoreAnimal" />
      <xs:enumeration value="OvivoreAnimal" />
      <xs:enumeration value="Fungus" />
      <xs:enumeration value="DendrovoreAnimal" />
      <xs:enumeration value="VegetarianAnimal" />
      <xs:enumeration value="OmnivoreAnimal" />
      <xs:enumeration value="OmnivoreHuman" />
      <xs:enumeration value="VegetarianRoughAnimal" />
      <xs:enumeration value="OmnivoreRoughAnimal" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FoodPreferability">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="NeverForNutrition" />
      <xs:enumeration value="DesperateOnly" />
      <xs:enumeration value="DesperateOnlyForHumanlikes" />
      <xs:enumeration value="RawBad" />
      <xs:enumeration value="RawTasty" />
      <xs:enumeration value="MealTerrible" />
      <xs:enumeration value="MealAwful" />
      <xs:enumeration value="MealSimple" />
      <xs:enumeration value="MealFine" />
      <xs:enumeration value="MealLavish" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="IngestibleProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="maxNumToIngestAtOnce" type="xs:int" />
      <xs:element name="defaultNumToIngestAtOnce" type="xs:int" />
      <xs:element name="outcomeDoers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="IngestionOutcomeDoer" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="baseIngestTicks" type="xs:int" />
      <xs:element name="chairSearchRadius" type="xs:float" />
      <xs:element name="useEatingSpeedStat" type="StrBoolean" />
      <xs:element name="babiesCanIngest" type="StrBoolean" />
      <xs:element name="humanlikeOnly" type="StrBoolean" />
      <xs:element name="tasteThought" type="xs:string" />
      <xs:element name="specialThoughtDirect" type="xs:string" />
      <xs:element name="specialThoughtAsIngredient" type="xs:string" />
      <xs:element name="ateEvent" type="xs:string" />
      <xs:element name="ingestEffect" type="xs:string" />
      <xs:element name="ingestEffectEat" type="xs:string" />
      <xs:element name="ingestSound" type="xs:string" />
      <xs:element name="ingestCommandString" type="xs:string" />
      <xs:element name="ingestReportString" type="xs:string" />
      <xs:element name="ingestReportStringEat" type="xs:string" />
      <xs:element name="ingestHoldOffsetStanding" type="HoldOffsetSet" />
      <xs:element name="ingestHoldUsesTable" type="StrBoolean" />
      <xs:element name="tableDesired" type="StrBoolean" />
      <xs:element name="showIngestFloatOption" type="StrBoolean" />
      <xs:element name="foodType" type="FoodTypeFlags" />
      <xs:element name="joy" type="xs:float" />
      <xs:element name="joyKind" type="xs:string" />
      <xs:element name="sourceDef" type="xs:string" />
      <xs:element name="preferability" type="FoodPreferability" />
      <xs:element name="nurseable" type="StrBoolean" />
      <xs:element name="optimalityOffsetHumanlikes" type="xs:float" />
      <xs:element name="optimalityOffsetFeedingAnimals" type="xs:float" />
      <xs:element name="drugCategory" type="DrugCategory" />
      <xs:element name="canAutoSelectAsFoodForCaravan" type="StrBoolean" />
      <xs:element name="lowPriorityCaravanFood" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="FilthProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="cleaningWorkToReduceThickness" type="xs:float" />
      <xs:element name="canFilthAttach" type="StrBoolean" />
      <xs:element name="rainWashes" type="StrBoolean" />
      <xs:element name="allowsFire" type="StrBoolean" />
      <xs:element name="ignoreFilthMultiplierStat" type="StrBoolean" />
      <xs:element name="maxThickness" type="xs:int" />
      <xs:element name="disappearsInDays">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="placementMask" type="FilthSourceFlags" />
      <xs:element name="cleaningSound" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="GasProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="expireSeconds">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="rotationSpeed" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="BuildingSizeCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Small" />
      <xs:enumeration value="Medium" />
      <xs:enumeration value="Large" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="FillableBarRequest">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="center" type="Vector3" />
      <xs:element name="size" type="Vector2" />
      <xs:element name="fillPercent" type="xs:float" />
      <xs:element name="filledMat" type="Material" />
      <xs:element name="unfilledMat" type="Material" />
      <xs:element name="margin" type="xs:float" />
      <xs:element name="rotation" type="Rot4" />
      <xs:element name="preRotationOffset" type="Vector2" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="FillableBarRequestWithRotation">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="north" type="FillableBarRequest" />
      <xs:element name="south" type="FillableBarRequest" />
      <xs:element name="east" type="FillableBarRequest" />
      <xs:element name="west" type="FillableBarRequest" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MoteForRotationData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="north" type="xs:string" />
      <xs:element name="south" type="xs:string" />
      <xs:element name="east" type="xs:string" />
      <xs:element name="west" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BuildingProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="isEdifice" type="StrBoolean" />
      <xs:element name="buildingTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="isInert" type="StrBoolean" />
      <xs:element name="isTargetable" type="StrBoolean" />
      <xs:element name="alwaysDeconstructible" type="StrBoolean" />
      <xs:element name="alwaysUninstallable" type="StrBoolean" />
      <xs:element name="leavingsBlacklist">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="forcedCostLeavings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="claimable" type="StrBoolean" />
      <xs:element name="isSittable" type="StrBoolean" />
      <xs:element name="multiSittable" type="StrBoolean" />
      <xs:element name="sitIgnoreOrientation" type="StrBoolean" />
      <xs:element name="spawnedConceptLearnOpportunity" type="xs:string" />
      <xs:element name="boughtConceptLearnOpportunity" type="xs:string" />
      <xs:element name="expandHomeArea" type="StrBoolean" />
      <xs:element name="blueprintClass" type="xs:string" />
      <xs:element name="blueprintGraphicData" type="GraphicData" />
      <xs:element name="uninstallWork" type="xs:float" />
      <xs:element name="forceShowRoomStats" type="StrBoolean" />
      <xs:element name="neverBuildable" type="StrBoolean" />
      <xs:element name="isWall" type="StrBoolean" />
      <xs:element name="alwaysExchangeVacuum" type="StrBoolean" />
      <xs:element name="canExchangeVacuum" type="StrBoolean" />
      <xs:element name="draftAttackNonDeconstructable" type="StrBoolean" />
      <xs:element name="wantsHopperAdjacent" type="StrBoolean" />
      <xs:element name="allowWireConnection" type="StrBoolean" />
      <xs:element name="shipPart" type="StrBoolean" />
      <xs:element name="canPlaceOverImpassablePlant" type="StrBoolean" />
      <xs:element name="heatPerTickWhileWorking" type="xs:float" />
      <xs:element name="canBuildNonEdificesUnder" type="StrBoolean" />
      <xs:element name="canPlaceOverWall" type="StrBoolean" />
      <xs:element name="isPlaceOverableWall" type="StrBoolean" />
      <xs:element name="allowAutoroof" type="StrBoolean" />
      <xs:element name="preventDeteriorationOnTop" type="StrBoolean" />
      <xs:element name="preventDeteriorationInside" type="StrBoolean" />
      <xs:element name="isMealSource" type="StrBoolean" />
      <xs:element name="isNaturalRock" type="StrBoolean" />
      <xs:element name="isResourceRock" type="StrBoolean" />
      <xs:element name="repairable" type="StrBoolean" />
      <xs:element name="roofCollapseDamageMultiplier" type="xs:float" />
      <xs:element name="hasFuelingPort" type="StrBoolean" />
      <xs:element name="smoothedThing" type="xs:string" />
      <xs:element name="naturalTerrain" type="xs:string" />
      <xs:element name="leaveTerrain" type="xs:string" />
      <xs:element name="combatPower" type="xs:float" />
      <xs:element name="minMechClusterPoints" type="xs:int" />
      <xs:element name="destroyShakeAmount" type="xs:float" />
      <xs:element name="destroySound" type="xs:string" />
      <xs:element name="soundMeleeHitOverride" type="xs:string" />
      <xs:element name="destroyEffecter" type="xs:string" />
      <xs:element name="buildingSizeCategory" type="BuildingSizeCategory" />
      <xs:element name="isFence" type="StrBoolean" />
      <xs:element name="relatedBuildCommands">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="relatedTerrain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="alwaysShowRelatedBuildCommands" type="StrBoolean" />
      <xs:element name="useIdeoColor" type="StrBoolean" />
      <xs:element name="wakeDormantPawnsOnConstruction" type="StrBoolean" />
      <xs:element name="maxItemsInCell" type="xs:int" />
      <xs:element name="paintable" type="StrBoolean" />
      <xs:element name="canBeDamagedByAttacks" type="StrBoolean" />
      <xs:element name="isHopper" type="StrBoolean" />
      <xs:element name="quickTargetable" type="StrBoolean" />
      <xs:element name="displayAttackToDestroyOnInspectPane" type="StrBoolean" />
      <xs:element name="isEscapableContainer" type="StrBoolean" />
      <xs:element name="isPowerConduit" type="StrBoolean" />
      <xs:element name="biomeSpecific" type="StrBoolean" />
      <xs:element name="crater" type="StrBoolean" />
      <xs:element name="canLandGravshipOn" type="StrBoolean" />
      <xs:element name="isAirtight" type="StrBoolean" />
      <xs:element name="isStuffableAirtight" type="StrBoolean" />
      <xs:element name="canConstructInCorner" type="StrBoolean" />
      <xs:element name="isAttachment" type="StrBoolean" />
      <xs:element name="supportsWallAttachments" type="StrBoolean" />
      <xs:element name="isPlayerEjectable" type="StrBoolean" />
      <xs:element name="openingStartedSound" type="xs:string" />
      <xs:element name="fullGraveGraphicData" type="GraphicData" />
      <xs:element name="bed_healPerDay" type="xs:float" />
      <xs:element name="bed_defaultMedical" type="StrBoolean" />
      <xs:element name="bed_showSleeperBody" type="StrBoolean" />
      <xs:element name="bed_humanlike" type="StrBoolean" />
      <xs:element name="bed_maxBodySize" type="xs:float" />
      <xs:element name="bed_caravansCanUse" type="StrBoolean" />
      <xs:element name="bed_slabBed" type="StrBoolean" />
      <xs:element name="bed_crib" type="StrBoolean" />
      <xs:element name="bed_pawnDrawOffset" type="xs:float" />
      <xs:element name="bed_canBeMedical" type="StrBoolean" />
      <xs:element name="bed_DisplayOwnerType" type="StrBoolean" />
      <xs:element name="bed_DisplayOwnersInInspectString" type="StrBoolean" />
      <xs:element name="bed_countsForBedroomOrBarracks" type="StrBoolean" />
      <xs:element name="bed_emptyCountsForBarracks" type="StrBoolean" />
      <xs:element name="bed_UseSheetColor" type="StrBoolean" />
      <xs:element name="nutritionCostPerDispense" type="xs:float" />
      <xs:element name="soundDispense" type="xs:string" />
      <xs:element name="turretGunDef" type="xs:string" />
      <xs:element name="turretBurstWarmupTime">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="turretBurstCooldownTime" type="xs:float" />
      <xs:element name="turretInitialCooldownTime" type="xs:float" />
      <xs:element name="turretTopDrawSize" type="xs:float" />
      <xs:element name="turretTopOffset" type="Vector2" />
      <xs:element name="playTargetAcquiredSound" type="StrBoolean" />
      <xs:element name="turretTopLoadedGraphic" type="GraphicData" />
      <xs:element name="requiredMechWeightClasses">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="ai_combatDangerous" type="StrBoolean" />
      <xs:element name="ai_chillDestination" type="StrBoolean" />
      <xs:element name="ai_neverTrashThis" type="StrBoolean" />
      <xs:element name="preferConnectingToFences" type="StrBoolean" />
      <xs:element name="roamerCanOpen" type="StrBoolean" />
      <xs:element name="soundDoorOpenPowered" type="xs:string" />
      <xs:element name="soundDoorClosePowered" type="xs:string" />
      <xs:element name="soundDoorOpenManual" type="xs:string" />
      <xs:element name="soundDoorCloseManual" type="xs:string" />
      <xs:element name="soundDoorCloseEnd" type="xs:string" />
      <xs:element name="poweredDoorOpenSpeedFactor" type="xs:float" />
      <xs:element name="poweredDoorCloseSpeedFactor" type="xs:float" />
      <xs:element name="unpoweredDoorOpenSpeedFactor" type="xs:float" />
      <xs:element name="unpoweredDoorCloseSpeedFactor" type="xs:float" />
      <xs:element name="doorTempEqualizeIntervalClosed" type="xs:int" />
      <xs:element name="doorTempEqualizeIntervalOpen" type="xs:int" />
      <xs:element name="doorTempEqualizeRate" type="xs:float" />
      <xs:element name="sowTag" type="xs:string" />
      <xs:element name="defaultPlantToGrow" type="xs:string" />
      <xs:element name="mineableThing" type="xs:string" />
      <xs:element name="mineableYield" type="xs:int" />
      <xs:element name="veinMineable" type="StrBoolean" />
      <xs:element name="mineableNonMinedEfficiency" type="xs:float" />
      <xs:element name="mineableDropChance" type="xs:float" />
      <xs:element name="mineableYieldWasteable" type="StrBoolean" />
      <xs:element name="mineableScatterCommonality" type="xs:float" />
      <xs:element name="mineableScatterLumpSizeRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="mineablePreventMeteorite" type="StrBoolean" />
      <xs:element name="mineablePreventNaturalRockOnSurface" type="StrBoolean" />
      <xs:element name="ignoreStoredThingsBeauty" type="StrBoolean" />
      <xs:element name="storageGroupTag" type="xs:string" />
      <xs:element name="groupingLabel" type="xs:string" />
      <xs:element name="groupingOrder" type="xs:int" />
      <xs:element name="isTrap" type="StrBoolean" />
      <xs:element name="trapDestroyOnSpring" type="StrBoolean" />
      <xs:element name="trapPeacefulWildAnimalsSpringChanceFactor" type="xs:float" />
      <xs:element name="trapDamageCategory" type="xs:string" />
      <xs:element name="trapUnarmedGraphicData" type="GraphicData" />
      <xs:element name="workTableRoomRole" type="xs:string" />
      <xs:element name="workTableNotInRoomRoleFactor" type="xs:float" />
      <xs:element name="unpoweredWorkTableWorkSpeedFactor" type="xs:float" />
      <xs:element name="workTableCompleteSoundDef" type="xs:string" />
      <xs:element name="watchBuildingStandDistanceRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="watchBuildingStandRectWidth" type="xs:int" />
      <xs:element name="watchBuildingInSameRoom" type="StrBoolean" />
      <xs:element name="joyKind" type="xs:string" />
      <xs:element name="haulToContainerDuration" type="xs:int" />
      <xs:element name="instrumentRange" type="xs:float" />
      <xs:element name="minDistanceToSameTypeOfBuilding" type="xs:int" />
      <xs:element name="artificialForMeditationPurposes" type="StrBoolean" />
      <xs:element name="effectWatching" type="xs:string" />
      <xs:element name="gibbetCageTopGraphicData" type="GraphicData" />
      <xs:element name="gibbetCorposeDrawOffset" type="Vector3" />
      <xs:element name="gibbetCagePlaceCorpseEffecter" type="xs:string" />
      <xs:element name="openingEffect" type="xs:string" />
      <xs:element name="barDrawData" type="FillableBarRequestWithRotation" />
      <xs:element name="gestatorFormingMote" type="MoteForRotationData" />
      <xs:element name="gestatorCycleCompleteMote" type="MoteForRotationData" />
      <xs:element name="gestatorFormedMote" type="MoteForRotationData" />
      <xs:element name="mechGestatorCylinderGraphic" type="GraphicData" />
      <xs:element name="mechGestatorTopGraphic" type="GraphicData" />
      <xs:element name="formingGraphicData" type="GraphicData" />
      <xs:element name="formingMechBobSpeed" type="xs:float" />
      <xs:element name="formingMechYBobDistance" type="xs:float" />
      <xs:element name="formingMechPerRotationOffset">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Vector3" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="maxFormedMechDrawSize" type="Vector2" />
      <xs:element name="subcoreScannerFixedIngredients">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="IngredientCount" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="subcoreScannerTicks" type="xs:int" />
      <xs:element name="subcoreScannerHediff" type="xs:string" />
      <xs:element name="destroyBrain" type="StrBoolean" />
      <xs:element name="subcoreScannerOutputDef" type="xs:string" />
      <xs:element name="subcoreScannerStartEffect" type="xs:string" />
      <xs:element name="subcoreScannerWorking" type="xs:string" />
      <xs:element name="subcoreScannerComplete" type="xs:string" />
      <xs:element name="isInsectCocoon" type="StrBoolean" />
      <xs:element name="wastepackAtomizerBottomGraphic" type="GraphicData" />
      <xs:element name="wastepackAtomizerWindowGraphic" type="GraphicData" />
      <xs:element name="wastepackAtomizerOperationEffecter" type="xs:string" />
      <xs:element name="bookendGraphicEast" type="GraphicData" />
      <xs:element name="bookendGraphicNorth" type="GraphicData" />
      <xs:element name="isSupportDoor" type="StrBoolean" />
      <xs:element name="doorTopGraphic" type="GraphicData" />
      <xs:element name="doorSupportGraphic" type="GraphicData" />
      <xs:element name="upperMoverGraphic" type="GraphicData" />
      <xs:element name="doorTopGraphicOffset" type="Vector3" />
      <xs:element name="doorSupportGraphicOffset" type="Vector3" />
      <xs:element name="doorTopHorizontalOffset" type="Vector3" />
      <xs:element name="doorTopVerticalOffset" type="Vector3" />
      <xs:element name="groundSpawnerThingToSpawn" type="xs:string" />
      <xs:element name="groundSpawnerSpawnDelay">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="groundSpawnerDestroyAdjacent" type="StrBoolean" />
      <xs:element name="groundSpawnerSustainerSound" type="xs:string" />
      <xs:element name="groundSpawnerSustainedEffecter" type="xs:string" />
      <xs:element name="groundSpawnerCompleteEffecter" type="xs:string" />
      <xs:element name="groundSpawnerLetterLabel" type="xs:string" />
      <xs:element name="groundSpawnerLetterText" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="PawnNameCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NoName" />
      <xs:enumeration value="HumanStandard" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DeathActionProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="workerClass" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="AnimalBiomeRecord">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="biome" type="xs:string" />
      <xs:element name="commonality" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="AnimalType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Canine" />
      <xs:enumeration value="Dryad" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="MechWorkTypePriority">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="priority" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DetritusLeavingType">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="texOverrideIndex" type="xs:int" />
      <xs:element name="spawnChance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LifeStageAge">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="minAge" type="xs:float" />
      <xs:element name="soundCall" type="xs:string" />
      <xs:element name="soundAngry" type="xs:string" />
      <xs:element name="soundWounded" type="xs:string" />
      <xs:element name="soundDeath" type="xs:string" />
      <xs:element name="soundAmbience" type="xs:string" />
      <xs:element name="soundAttack" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LifeStageWorkSettings">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="workType" type="xs:string" />
      <xs:element name="minAge" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RaceProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="intelligence" type="Intelligence" />
      <xs:element name="hasGenders" type="StrBoolean" />
      <xs:element name="forceGender" type="Gender" />
      <xs:element name="needsRest" type="StrBoolean" />
      <xs:element name="thinkTreeMain" type="xs:string" />
      <xs:element name="thinkTreeConstant" type="xs:string" />
      <xs:element name="dutyBoss" type="xs:string" />
      <xs:element name="nameCategory" type="PawnNameCategory" />
      <xs:element name="foodType" type="FoodTypeFlags" />
      <xs:element name="body" type="xs:string" />
      <xs:element name="deathAction" type="DeathActionProperties" />
      <xs:element name="wildBiomes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="AnimalBiomeRecord" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="makesFootprints" type="StrBoolean" />
      <xs:element name="executionRange" type="xs:int" />
      <xs:element name="lifeExpectancy" type="xs:float" />
      <xs:element name="hediffGiverSets">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="roamMtbDays" type="xs:float" />
      <xs:element name="allowedOnCaravan" type="StrBoolean" />
      <xs:element name="canReleaseToWild" type="StrBoolean" />
      <xs:element name="playerCanChangeMaster" type="StrBoolean" />
      <xs:element name="showTrainables" type="StrBoolean" />
      <xs:element name="hideTrainingTab" type="StrBoolean" />
      <xs:element name="doesntMove" type="StrBoolean" />
      <xs:element name="renderTree" type="xs:string" />
      <xs:element name="startingAnimation" type="xs:string" />
      <xs:element name="linkedCorpseKind" type="xs:string" />
      <xs:element name="canOpenFactionlessDoors" type="StrBoolean" />
      <xs:element name="alwaysAwake" type="StrBoolean" />
      <xs:element name="alwaysViolent" type="StrBoolean" />
      <xs:element name="isImmuneToInfections" type="StrBoolean" />
      <xs:element name="bleedRateFactor" type="xs:float" />
      <xs:element name="canBecomeShambler" type="StrBoolean" />
      <xs:element name="neverIncludeInQuests" type="StrBoolean" />
      <xs:element name="canBeVacuumBurnt" type="StrBoolean" />
      <xs:element name="herdAnimal" type="StrBoolean" />
      <xs:element name="packAnimal" type="StrBoolean" />
      <xs:element name="predator" type="StrBoolean" />
      <xs:element name="maxPreyBodySize" type="xs:float" />
      <xs:element name="petness" type="xs:float" />
      <xs:element name="nuzzleMtbHours" type="xs:float" />
      <xs:element name="manhunterOnDamageChance" type="xs:float" />
      <xs:element name="manhunterOnTameFailChance" type="xs:float" />
      <xs:element name="canBePredatorPrey" type="StrBoolean" />
      <xs:element name="herdMigrationAllowed" type="StrBoolean" />
      <xs:element name="animalType" type="AnimalType" />
      <xs:element name="willNeverEat">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="giveNonToolUserBeatFireVerb" type="StrBoolean" />
      <xs:element name="disableIgniteVerb" type="StrBoolean" />
      <xs:element name="disableAreaControl" type="StrBoolean" />
      <xs:element name="waterSeeker" type="StrBoolean" />
      <xs:element name="waterCellCost" type="xs:int" />
      <xs:element name="disableMating" type="StrBoolean" />
      <xs:element name="canCrossBreedWith">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="crossAggroWith">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="canFishForFood" type="StrBoolean" />
      <xs:element name="canFlyInVacuum" type="StrBoolean" />
      <xs:element name="manhunterPackUseLabelFrom" type="xs:string" />
      <xs:element name="flightStartChanceOnJobStart" type="xs:float" />
      <xs:element name="flightSpeedFactor" type="xs:float" />
      <xs:element name="canFlyIntoMap" type="StrBoolean" />
      <xs:element name="canLeaveMapFlying" type="StrBoolean" />
      <xs:element name="leaveMapOnFleeChance" type="xs:float" />
      <xs:element name="maxMechEnergy" type="xs:int" />
      <xs:element name="mechEnabledWorkTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="mechFixedSkillLevel" type="xs:int" />
      <xs:element name="mechWorkTypePriorities">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="MechWorkTypePriority" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="bulletStaggerDelayTicks" type="xs:int" />
      <xs:element name="bulletStaggerSpeedFactor" type="xs:float" />
      <xs:element name="bulletStaggerEffecterDef" type="xs:string" />
      <xs:element name="bulletStaggerIgnoreBodySize" type="StrBoolean" />
      <xs:element name="mechWeightClass" type="xs:string" />
      <xs:element name="detritusLeavings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="DetritusLeavingType" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="gestationPeriodDays" type="xs:float" />
      <xs:element name="mateMtbHours" type="xs:float" />
      <xs:element name="untrainableTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="trainableTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="trainability" type="xs:string" />
      <xs:element name="specialTrainables">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="nameOnTameChance" type="xs:float" />
      <xs:element name="baseBodySize" type="xs:float" />
      <xs:element name="baseHealthScale" type="xs:float" />
      <xs:element name="baseHungerRate" type="xs:float" />
      <xs:element name="lifeStageAges">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="LifeStageAge" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="lifeStageWorkSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="LifeStageWorkSettings" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="hasMeat" type="StrBoolean" />
      <xs:element name="meatLabel" type="xs:string" />
      <xs:element name="meatColor" type="Color" />
      <xs:element name="meatMarketValue" type="xs:float" />
      <xs:element name="specificMeatDef" type="xs:string" />
      <xs:element name="useMeatFrom" type="xs:string" />
      <xs:element name="useLeatherFrom" type="xs:string" />
      <xs:element name="hasCorpse" type="StrBoolean" />
      <xs:element name="hasUnnaturalCorpse" type="StrBoolean" />
      <xs:element name="corpseHiddenWhileUndiscovered" type="StrBoolean" />
      <xs:element name="leatherDef" type="xs:string" />
      <xs:element name="specialShadowData" type="ShadowData" />
      <xs:element name="headPosPerRotation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Vector3" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="soundCallIntervalRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="soundCallIntervalFriendlyFactor" type="xs:float" />
      <xs:element name="soundCallIntervalAggressiveFactor" type="xs:float" />
      <xs:element name="soundMeleeHitPawn" type="xs:string" />
      <xs:element name="soundMeleeHitBuilding" type="xs:string" />
      <xs:element name="soundMeleeMiss" type="xs:string" />
      <xs:element name="soundMeleeDodge" type="xs:string" />
      <xs:element name="soundAmbience" type="xs:string" />
      <xs:element name="soundMoving" type="xs:string" />
      <xs:element name="soundEating" type="xs:string" />
      <xs:element name="knowledgeCategory" type="xs:string" />
      <xs:element name="anomalyKnowledge" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="WornGraphicBodyTypeData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="offset" type="Vector2" />
      <xs:element name="scale" type="Vector2" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="WornGraphicDirectionData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="offset" type="Vector2" />
      <xs:element name="scale" type="Vector2" />
      <xs:element name="male" type="WornGraphicBodyTypeData" />
      <xs:element name="female" type="WornGraphicBodyTypeData" />
      <xs:element name="thin" type="WornGraphicBodyTypeData" />
      <xs:element name="hulk" type="WornGraphicBodyTypeData" />
      <xs:element name="fat" type="WornGraphicBodyTypeData" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="WornGraphicData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="renderUtilityAsPack" type="StrBoolean" />
      <xs:element name="north" type="WornGraphicDirectionData" />
      <xs:element name="south" type="WornGraphicDirectionData" />
      <xs:element name="east" type="WornGraphicDirectionData" />
      <xs:element name="west" type="WornGraphicDirectionData" />
      <xs:element name="male" type="WornGraphicBodyTypeData" />
      <xs:element name="female" type="WornGraphicBodyTypeData" />
      <xs:element name="thin" type="WornGraphicBodyTypeData" />
      <xs:element name="hulk" type="WornGraphicBodyTypeData" />
      <xs:element name="fat" type="WornGraphicBodyTypeData" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ApparelProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="bodyPartGroups">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="layers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="wornGraphicPath" type="xs:string" />
      <xs:element name="wornGraphicPaths">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="wornGraphicData" type="WornGraphicData" />
      <xs:element name="useWornGraphicMask" type="StrBoolean" />
      <xs:element name="renderSkipFlags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="drawData" type="DrawData" />
      <xs:element name="parentTagDef" type="xs:string" />
      <xs:element name="forceEyesVisibleForRotations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:int">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="shellRenderedBehindHead" type="StrBoolean" />
      <xs:element name="tags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultOutfitTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="canBeGeneratedToSatisfyWarmth" type="StrBoolean" />
      <xs:element name="canBeGeneratedToSatisfyVacuumResistance" type="StrBoolean" />
      <xs:element name="canBeGeneratedToSatisfyToxicEnvironmentResistance" type="StrBoolean" />
      <xs:element name="canBeDesiredForIdeo" type="StrBoolean" />
      <xs:element name="ideoDesireAllowedFactionCategoryTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="ideoDesireDisallowedFactionCategoryTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="abilities">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="wearPerDay" type="xs:float" />
      <xs:element name="careIfWornByCorpse" type="StrBoolean" />
      <xs:element name="careIfDamaged" type="StrBoolean" />
      <xs:element name="ignoredByNonViolent" type="StrBoolean" />
      <xs:element name="ai_pickUpOpportunistically" type="StrBoolean" />
      <xs:element name="blocksAddedPartWoundGraphics" type="StrBoolean" />
      <xs:element name="blocksVision" type="StrBoolean" />
      <xs:element name="immuneToToxGasExposure" type="StrBoolean" />
      <xs:element name="slaveApparel" type="StrBoolean" />
      <xs:element name="mechanitorApparel" type="StrBoolean" />
      <xs:element name="legsNakedUnlessCoveredBySomethingElse" type="StrBoolean" />
      <xs:element name="useDeflectMetalEffect" type="StrBoolean" />
      <xs:element name="countsAsClothingForNudity" type="StrBoolean" />
      <xs:element name="anyTechLevelCanUseForWarmth" type="StrBoolean" />
      <xs:element name="gender" type="Gender" />
      <xs:element name="scoreOffset" type="xs:float" />
      <xs:element name="developmentalStageFilter" type="DevelopmentalStage" />
      <xs:element name="soundWear" type="xs:string" />
      <xs:element name="soundRemove" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="CurvedScaler">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="axisMask" type="Vector3" />
      <xs:element name="scaleAmt">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="scaleTime">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MoteProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="realTime" type="StrBoolean" />
      <xs:element name="fadeInTime" type="xs:float" />
      <xs:element name="solidTime" type="xs:float" />
      <xs:element name="fadeOutTime" type="xs:float" />
      <xs:element name="acceleration" type="Vector3" />
      <xs:element name="speedPerTime" type="xs:float" />
      <xs:element name="growthRate" type="xs:float" />
      <xs:element name="collide" type="StrBoolean" />
      <xs:element name="archHeight" type="xs:float" />
      <xs:element name="archDuration" type="xs:float" />
      <xs:element name="archStartOffset" type="xs:float" />
      <xs:element name="landSound" type="xs:string" />
      <xs:element name="unattachedDrawOffset" type="Vector3" />
      <xs:element name="attachedDrawOffset" type="Vector3" />
      <xs:element name="needsMaintenance" type="StrBoolean" />
      <xs:element name="rotateTowardsTarget" type="StrBoolean" />
      <xs:element name="rotateTowardsMoveDirection" type="StrBoolean" />
      <xs:element name="scaleToConnectTargets" type="StrBoolean" />
      <xs:element name="attachedToHead" type="StrBoolean" />
      <xs:element name="fadeOutUnmaintained" type="StrBoolean" />
      <xs:element name="updateOffsetToMatchTargetRotation" type="StrBoolean" />
      <xs:element name="yFightingOffsetScalar01" type="xs:float" />
      <xs:element name="scalers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="CurvedScaler" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PlantBiomeRecord">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="biome" type="xs:string" />
      <xs:element name="commonality" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="Pollution">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CleanOnly" />
      <xs:enumeration value="PollutedOnly" />
      <xs:enumeration value="Any" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PlantPurpose">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Food" />
      <xs:enumeration value="Health" />
      <xs:enumeration value="Beauty" />
      <xs:enumeration value="Misc" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TreeCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Mini" />
      <xs:enumeration value="Full" />
      <xs:enumeration value="Super" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PlantProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="wildBiomes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PlantBiomeRecord" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="wildClusterRadius" type="xs:int" />
      <xs:element name="wildClusterWeight" type="xs:float" />
      <xs:element name="wildOrder" type="xs:float" />
      <xs:element name="wildEqualLocalDistribution" type="StrBoolean" />
      <xs:element name="cavePlant" type="StrBoolean" />
      <xs:element name="cavePlantWeight" type="xs:float" />
      <xs:element name="wildTerrainTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="wildPlantUseDistanceToShore" type="StrBoolean" />
      <xs:element name="plantRespawningCommonalityFactor" type="xs:float" />
      <xs:element name="sowTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="sowWork" type="xs:float" />
      <xs:element name="sowMinSkill" type="xs:int" />
      <xs:element name="blockAdjacentSow" type="StrBoolean" />
      <xs:element name="sowResearchPrerequisites">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="mustBeWildToSow" type="StrBoolean" />
      <xs:element name="harvestWork" type="xs:float" />
      <xs:element name="harvestYield" type="xs:float" />
      <xs:element name="harvestedThingDef" type="xs:string" />
      <xs:element name="harvestTag" type="xs:string" />
      <xs:element name="harvestMinGrowth" type="xs:float" />
      <xs:element name="harvestAfterGrowth" type="xs:float" />
      <xs:element name="harvestFailable" type="StrBoolean" />
      <xs:element name="harvestYieldAffectedByDifficulty" type="StrBoolean" />
      <xs:element name="soundHarvesting" type="xs:string" />
      <xs:element name="soundHarvestFinish" type="xs:string" />
      <xs:element name="autoHarvestable" type="StrBoolean" />
      <xs:element name="skipDeteriorationMessage" type="StrBoolean" />
      <xs:element name="growDays" type="xs:float" />
      <xs:element name="lifespanDaysPerGrowDays" type="xs:float" />
      <xs:element name="growMinGlow" type="xs:float" />
      <xs:element name="growOptimalGlow" type="xs:float" />
      <xs:element name="diesToLight" type="StrBoolean" />
      <xs:element name="vacuumResistant" type="StrBoolean" />
      <xs:element name="terraformable" type="StrBoolean" />
      <xs:element name="pollution" type="Pollution" />
      <xs:element name="minGrowthTemperature" type="xs:float" />
      <xs:element name="minOptimalGrowthTemperature" type="xs:float" />
      <xs:element name="maxOptimalGrowthTemperature" type="xs:float" />
      <xs:element name="maxGrowthTemperature" type="xs:float" />
      <xs:element name="fertilityMin" type="xs:float" />
      <xs:element name="fertilitySensitivity" type="xs:float" />
      <xs:element name="completelyIgnoreFertility" type="StrBoolean" />
      <xs:element name="dieIfLeafless" type="StrBoolean" />
      <xs:element name="neverBlightable" type="StrBoolean" />
      <xs:element name="interferesWithRoof" type="StrBoolean" />
      <xs:element name="dieIfNoSunlight" type="StrBoolean" />
      <xs:element name="dieFromToxicFallout" type="StrBoolean" />
      <xs:element name="purpose" type="PlantPurpose" />
      <xs:element name="humanFoodPlant" type="StrBoolean" />
      <xs:element name="treeLoversCareIfChopped" type="StrBoolean" />
      <xs:element name="allowAutoCut" type="StrBoolean" />
      <xs:element name="drugForHarvestPurposes" type="StrBoolean" />
      <xs:element name="treeCategory" type="TreeCategory" />
      <xs:element name="burnedThingDef" type="xs:string" />
      <xs:element name="choppedThingDef" type="xs:string" />
      <xs:element name="smashedThingDef" type="xs:string" />
      <xs:element name="canDeteriorate" type="StrBoolean" />
      <xs:element name="showGrowthInInspectPane" type="StrBoolean" />
      <xs:element name="minSpacingBetweenSamePlant" type="xs:float" />
      <xs:element name="forceIsTree" type="StrBoolean" />
      <xs:element name="warnIfMarkedForCut" type="StrBoolean" />
      <xs:element name="isStump" type="StrBoolean" />
      <xs:element name="topWindExposure" type="xs:float" />
      <xs:element name="maxMeshCount" type="xs:int" />
      <xs:element name="visualSizeRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="showInFrozenWater" type="StrBoolean" />
      <xs:element name="destroyedByFlooding" type="StrBoolean" />
      <xs:element name="dropLeaves" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="GasType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BlindSmoke" />
      <xs:enumeration value="ToxGas" />
      <xs:enumeration value="RotStink" />
      <xs:enumeration value="DeadlifeDust" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ProjectileProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="speed" type="xs:float" />
      <xs:element name="flyOverhead" type="StrBoolean" />
      <xs:element name="alwaysFreeIntercept" type="StrBoolean" />
      <xs:element name="damageDef" type="xs:string" />
      <xs:element name="stoppingPower" type="xs:float" />
      <xs:element name="extraDamages">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ExtraDamage" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="arcHeightFactor" type="xs:float" />
      <xs:element name="shadowSize" type="xs:float" />
      <xs:element name="landedEffecter" type="xs:string" />
      <xs:element name="spinRate" type="xs:float" />
      <xs:element name="useGraphicClass" type="StrBoolean" />
      <xs:element name="soundHitThickRoof" type="xs:string" />
      <xs:element name="soundExplode" type="xs:string" />
      <xs:element name="soundImpactAnticipate" type="xs:string" />
      <xs:element name="soundAmbient" type="xs:string" />
      <xs:element name="soundImpact" type="xs:string" />
      <xs:element name="explosionRadius" type="xs:float" />
      <xs:element name="explosionRadiusDisplayPadding" type="xs:float" />
      <xs:element name="explosionDelay" type="xs:int" />
      <xs:element name="doExplosionVFX" type="StrBoolean" />
      <xs:element name="preExplosionSpawnThingDef" type="xs:string" />
      <xs:element name="preExplosionSpawnChance" type="xs:float" />
      <xs:element name="preExplosionSpawnThingCount" type="xs:int" />
      <xs:element name="postExplosionSpawnThingDef" type="xs:string" />
      <xs:element name="postExplosionSpawnThingDefWater" type="xs:string" />
      <xs:element name="postExplosionSpawnChance" type="xs:float" />
      <xs:element name="postExplosionSpawnThingCount" type="xs:int" />
      <xs:element name="postExplosionGasType" type="GasType" />
      <xs:element name="applyDamageToExplosionCellsNeighbors" type="StrBoolean" />
      <xs:element name="explosionChanceToStartFire" type="xs:float" />
      <xs:element name="explosionDamageFalloff" type="StrBoolean" />
      <xs:element name="screenShakeFactor" type="xs:float" />
      <xs:element name="preExplosionSpawnSingleThingDef" type="xs:string" />
      <xs:element name="postExplosionSpawnSingleThingDef" type="xs:string" />
      <xs:element name="filth" type="xs:string" />
      <xs:element name="filthChance" type="xs:float" />
      <xs:element name="filthCount">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="numExtraHitCells" type="xs:int" />
      <xs:element name="explosionSpawnsSingleFilth" type="StrBoolean" />
      <xs:element name="spawnTerrain" type="xs:string" />
      <xs:element name="terrainChance" type="xs:float" />
      <xs:element name="terrainReplacesFloors" type="StrBoolean" />
      <xs:element name="explosionEffect" type="xs:string" />
      <xs:element name="explosionEffectLifetimeTicks" type="xs:int" />
      <xs:element name="spawnsThingDef" type="xs:string" />
      <xs:element name="tryAdjacentFreeSpaces" type="StrBoolean" />
      <xs:element name="spawnsPawnKind" type="xs:string" />
      <xs:element name="beamMoteDef" type="xs:string" />
      <xs:element name="beamStartOffset" type="xs:float" />
      <xs:element name="ai_IsIncendiary" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StatModifierQuality">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="stat" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StuffProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="stuffAdjective" type="xs:string" />
      <xs:element name="commonality" type="xs:float" />
      <xs:element name="categories">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="allowedInStuffGeneration" type="StrBoolean" />
      <xs:element name="statOffsets">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="statFactors">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="statOffsetsQuality">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="StatModifierQuality" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="statFactorsQuality">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="StatModifierQuality" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="color" type="Color" />
      <xs:element name="constructEffect" type="xs:string" />
      <xs:element name="appearance" type="xs:string" />
      <xs:element name="allowColorGenerators" type="StrBoolean" />
      <xs:element name="canSuggestUseDefaultStuff" type="StrBoolean" />
      <xs:element name="isAirtight" type="StrBoolean" />
      <xs:element name="soundImpactBullet" type="xs:string" />
      <xs:element name="soundImpactMelee" type="xs:string" />
      <xs:element name="soundMeleeHitSharp" type="xs:string" />
      <xs:element name="soundMeleeHitBlunt" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="SkyfallerMovementType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Accelerate" />
      <xs:enumeration value="ConstantSpeed" />
      <xs:enumeration value="Decelerate" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SkyfallerProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="hitRoof" type="StrBoolean" />
      <xs:element name="ticksToImpactRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="ticksToDiscardInReverse">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="reversed" type="StrBoolean" />
      <xs:element name="flightFlippedHorizontally" type="StrBoolean" />
      <xs:element name="explosionRadius" type="xs:float" />
      <xs:element name="explosionDamage" type="xs:string" />
      <xs:element name="damageSpawnedThings" type="StrBoolean" />
      <xs:element name="explosionDamageFactor" type="xs:float" />
      <xs:element name="metalShrapnelCountRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="rubbleShrapnelCountRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="shrapnelDistanceFactor" type="xs:float" />
      <xs:element name="spawnThing" type="xs:string" />
      <xs:element name="movementType" type="SkyfallerMovementType" />
      <xs:element name="speed" type="xs:float" />
      <xs:element name="shadow" type="xs:string" />
      <xs:element name="shadowSize" type="Vector2" />
      <xs:element name="cameraShake" type="xs:float" />
      <xs:element name="impactSound" type="xs:string" />
      <xs:element name="rotateGraphicTowardsDirection" type="StrBoolean" />
      <xs:element name="anticipationSound" type="xs:string" />
      <xs:element name="floatingSound" type="xs:string" />
      <xs:element name="anticipationSoundTicks" type="xs:int" />
      <xs:element name="motesPerCell" type="xs:int" />
      <xs:element name="moteSpawnTime" type="xs:float" />
      <xs:element name="fadeInTicks" type="xs:int" />
      <xs:element name="fadeOutTicks" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnFlyerProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="flightDurationMin" type="xs:float" />
      <xs:element name="flightSpeed" type="xs:float" />
      <xs:element name="heightFactor" type="xs:float" />
      <xs:element name="stunDurationTicksRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="SpectateRectSide">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Up" />
      <xs:enumeration value="Right" />
      <xs:enumeration value="Down" />
      <xs:enumeration value="Vertical" />
      <xs:enumeration value="Left" />
      <xs:enumeration value="Horizontal" />
      <xs:enumeration value="All" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="RitualFocusProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="spectateDistance">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="allowedSpectateSides" type="SpectateRectSide" />
      <xs:element name="consumable" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="IngredientProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="mergeCompatibilityTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MapPortalProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="pocketMapGenerator" type="xs:string" />
      <xs:element name="exitDef" type="xs:string" />
      <xs:element name="pocketMapSize" type="xs:int" />
      <xs:element name="enteredLetterLabel" type="xs:string" />
      <xs:element name="enteredLetterText" type="xs:string" />
      <xs:element name="enteredLetterDef" type="xs:string" />
      <xs:element name="traverseSound" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ThinkNode">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="subNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ThinkNode" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="leaveJoinableLordIfIssuesJob" type="StrBoolean" />
      <xs:element name="tag" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="Favorability">
    <xs:restriction base="xs:string">
      <xs:enumeration value="VeryBad" />
      <xs:enumeration value="Bad" />
      <xs:enumeration value="Neutral" />
      <xs:enumeration value="Good" />
      <xs:enumeration value="VeryGood" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="WeatherEventMaker">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="averageInterval" type="xs:float" />
      <xs:element name="eventClass" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SkyColorSet">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="sky" type="Color" />
      <xs:element name="shadow" type="Color" />
      <xs:element name="overlay" type="Color" />
      <xs:element name="saturation" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="WorldGenStep">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="ThinkTreeDutyHook">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="HighPriority" />
      <xs:enumeration value="MediumPriority" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RandomSocialMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Off" />
      <xs:enumeration value="Quiet" />
      <xs:enumeration value="Normal" />
      <xs:enumeration value="SuperActive" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GeneTemplateType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Skill" />
      <xs:enumeration value="Chemical" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ChemicalBiostatOverride">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="chemical" type="xs:string" />
      <xs:element name="biostatCpx" type="xs:int" />
      <xs:element name="biostatMet" type="xs:int" />
      <xs:element name="biostatArc" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="AbilityCompProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="compClass" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="BackstorySlot">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Childhood" />
      <xs:enumeration value="Adulthood" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SkillGain">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="skill" type="xs:string" />
      <xs:element name="amount" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PossessionThingDefCountClass">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="key" type="xs:string" />
      <xs:element name="value">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="WeatherCommonalityRecord">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="weather" type="xs:string" />
      <xs:element name="commonality" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="TerrainThreshold">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="terrain" type="xs:string" />
      <xs:element name="min" type="xs:float" />
      <xs:element name="max" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="TerrainPatchMaker">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="thresholds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="TerrainThreshold" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="perlinFrequency" type="xs:float" />
      <xs:element name="perlinLacunarity" type="xs:float" />
      <xs:element name="perlinPersistence" type="xs:float" />
      <xs:element name="perlinOctaves" type="xs:int" />
      <xs:element name="minFertility" type="xs:float" />
      <xs:element name="maxFertility" type="xs:float" />
      <xs:element name="minSize" type="xs:int" />
      <xs:element name="isPond" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BiomePlantRecord">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="plant" type="xs:string" />
      <xs:element name="commonality" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="FishChance">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="fishDef" type="xs:string" />
      <xs:element name="chance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BiomeFishTypes">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="freshwater_Common">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="FishChance" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="saltwater_Common">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="FishChance" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="freshwater_Uncommon">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="FishChance" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="saltwater_Uncommon">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="FishChance" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="rareCatchesSetMaker" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="WoundAnchor">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="tag" type="xs:string" />
      <xs:element name="group" type="xs:string" />
      <xs:element name="narrowCrown" type="Boolean" />
      <xs:element name="rotation" type="Rot4" />
      <xs:element name="canMirror" type="StrBoolean" />
      <xs:element name="offset" type="Vector3" />
      <xs:element name="layer" type="OverlayLayer" />
      <xs:element name="debugColor" type="Color" />
      <xs:element name="range" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnKindDefCount">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="kindDef" type="xs:string" />
      <xs:element name="count" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BossGroupWave">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="bossCount" type="xs:int" />
      <xs:element name="bossApparel">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="escorts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnKindDefCount" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="HediffGiver_Event">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="hediff" type="xs:string" />
      <xs:element name="partsToAffect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="canAffectAnyLivePart" type="StrBoolean" />
      <xs:element name="allowOnLodgers" type="StrBoolean" />
      <xs:element name="allowOnQuestRewardPawns" type="StrBoolean" />
      <xs:element name="allowOnQuestReservedPawns" type="StrBoolean" />
      <xs:element name="allowOnBeggars" type="StrBoolean" />
      <xs:element name="countToAffect" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="ColorType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Misc" />
      <xs:enumeration value="Ideo" />
      <xs:enumeration value="Hair" />
      <xs:enumeration value="Structure" />
      <xs:enumeration value="Weapon" />
      <xs:enumeration value="Planning" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ThingStyleCategoryWithPriority">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="category" type="xs:string" />
      <xs:element name="priority" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="IdeoWeaponClassPair">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="noble" type="xs:string" />
      <xs:element name="despised" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DrugPolicyEntry">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="drug" type="xs:string" />
      <xs:element name="allowedForAddiction" type="StrBoolean" />
      <xs:element name="allowedForJoy" type="StrBoolean" />
      <xs:element name="allowScheduled" type="StrBoolean" />
      <xs:element name="daysFrequency" type="xs:float" />
      <xs:element name="onlyIfMoodBelow" type="xs:float" />
      <xs:element name="onlyIfJoyBelow" type="xs:float" />
      <xs:element name="takeToInventory" type="xs:int" />
      <xs:element name="takeToInventoryTempBuffer" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="EntityDiscoveryType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Spawn" />
      <xs:enumeration value="Unfog" />
      <xs:enumeration value="BecameVisible" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PawnGenOption">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="kind" type="xs:string" />
      <xs:element name="selectionWeight" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnGroupMaker">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="kindDef" type="xs:string" />
      <xs:element name="commonality" type="xs:float" />
      <xs:element name="disallowedStrategies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="maxTotalPoints" type="xs:float" />
      <xs:element name="options">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnGenOption" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="traders">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnGenOption" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="carriers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnGenOption" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="guards">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PawnGenOption" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RoyalImplantRule">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="implantHediff" type="xs:string" />
      <xs:element name="minTitle" type="xs:string" />
      <xs:element name="maxLevel" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MemeWeight">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="meme" type="xs:string" />
      <xs:element name="selectionWeight" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DeityNameType">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="name" type="xs:string" />
      <xs:element name="type" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="DeityPreset">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="nameType" type="DeityNameType" />
      <xs:element name="gender" type="Gender" />
      <xs:element name="iconPath" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="Wound">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="texture" type="xs:string" />
      <xs:element name="textureSouth" type="xs:string" />
      <xs:element name="textureEast" type="xs:string" />
      <xs:element name="textureNorth" type="xs:string" />
      <xs:element name="textureWest" type="xs:string" />
      <xs:element name="flipSouth" type="StrBoolean" />
      <xs:element name="flipEast" type="StrBoolean" />
      <xs:element name="flipNorth" type="StrBoolean" />
      <xs:element name="flipWest" type="StrBoolean" />
      <xs:element name="scale" type="xs:float" />
      <xs:element name="drawOffsetSouth" type="Vector3" />
      <xs:element name="drawOffsetEastWest" type="Vector3" />
      <xs:element name="color" type="Color" />
      <xs:element name="tintWithSkinColor" type="StrBoolean" />
      <xs:element name="flipOnWoundAnchorTag" type="xs:string" />
      <xs:element name="flipOnRotation" type="Rot4" />
      <xs:element name="onlyOnPart" type="xs:string" />
      <xs:element name="displayOverApparel" type="StrBoolean" />
      <xs:element name="displayPermanent" type="StrBoolean" />
      <xs:element name="missingBodyPartFresh" type="Boolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="HediffWound">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="onlyHumanlikes" type="StrBoolean" />
      <xs:element name="hediff" type="xs:string" />
      <xs:element name="wounds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Wound" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="IncidentPopulationEffect">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="IncreaseHard" />
      <xs:enumeration value="IncreaseMedium" />
      <xs:enumeration value="IncreaseEasy" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="BiomeDiseaseRecord">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="biome" type="xs:string" />
      <xs:element name="diseaseInc" type="xs:string" />
      <xs:element name="commonality" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MTBByBiome">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="biome" type="xs:string" />
      <xs:element name="mtbDays" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="InteractionSymbolSource">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Def" />
      <xs:enumeration value="InitiatorIdeo" />
      <xs:enumeration value="InitiatorFaction" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ComplexThreat">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="chancePerComplex" type="xs:float" />
      <xs:element name="maxPerComplex" type="xs:int" />
      <xs:element name="maxPerRoom" type="xs:int" />
      <xs:element name="selectionWeight" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="CorridorShape">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Straight" />
      <xs:enumeration value="Cross" />
      <xs:enumeration value="T" />
      <xs:enumeration value="H" />
      <xs:enumeration value="AsymmetricCross" />
      <xs:enumeration value="All" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ScatterGroup">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="prefab" type="xs:string" />
      <xs:element name="weight" type="xs:float" />
      <xs:element name="max" type="xs:int" />
      <xs:element name="indoorRuin" type="StrBoolean" />
      <xs:element name="filthDef" type="xs:string" />
      <xs:element name="filthExpandBy" type="xs:int" />
      <xs:element name="filthChance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ScatteredPrefabs">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="prefabs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ScatterGroup" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="countPer10kCellsRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="minSpacing" type="xs:int" />
      <xs:element name="maxDistFromStructure" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LayoutRoomWeight">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="weight" type="xs:float" />
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LayoutScatterParms">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="stuff" type="xs:string" />
      <xs:element name="groupCount">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="groupsPerHundredCells">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="itemsPerGroup">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="groupDistRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="minGroups" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LayoutScatterTerrainParms">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="groupCount">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="groupsPerHundredCells">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="itemsPerGroup">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="groupDistRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="minGroups" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="RotationDirection">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Clockwise" />
      <xs:enumeration value="Opposite" />
      <xs:enumeration value="Counterclockwise" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="LayoutFillEdgesParms">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="stuff" type="xs:string" />
      <xs:element name="padding" type="xs:int" />
      <xs:element name="contractedBy" type="xs:int" />
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="groupsPerTenEdgeCells">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="groupCountRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="rotOffset" type="RotationDirection" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LayoutFillInteriorParms">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="stuff" type="xs:string" />
      <xs:element name="fixedRot" type="Rot4" />
      <xs:element name="alignWithRect" type="StrBoolean" />
      <xs:element name="contractedBy" type="xs:int" />
      <xs:element name="snapToGrid" type="StrBoolean" />
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="thingsPerHundredCells">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LayoutWallAttatchmentParms">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="stuff" type="xs:string" />
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="thingsPer10EdgeCells">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="spawnChancePerPosition" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LayoutPrefabParms">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="minMaxRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="ensureNoBlocks" type="StrBoolean" />
      <xs:element name="countPerHundredCells">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="countPerTenEdgeCells">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="rotOffset" type="RotationDirection" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="LayoutPartParms">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="chance" type="xs:float" />
      <xs:element name="threatPointsRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="SignalActionAmbushType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Manhunters" />
      <xs:enumeration value="Mechanoids" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RotEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="North" />
      <xs:enumeration value="East" />
      <xs:enumeration value="South" />
      <xs:enumeration value="West" />
      <xs:enumeration value="All" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="State">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Dormant" />
      <xs:enumeration value="Proximity" />
      <xs:enumeration value="Empty" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="TankOption">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="state" type="State" />
      <xs:element name="weight" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="BackstoryCategoryAndSlot">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="categoryName" type="xs:string" />
      <xs:element name="slot" type="BackstorySlot" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="MemeCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Structure" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PreceptThingPair">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="precept" type="xs:string" />
      <xs:element name="thing" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PreceptsWithNoneChance">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="preceptThingPairs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PreceptThingPair" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="noneChance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RequiredRitualAndBuilding">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="precept" type="xs:string" />
      <xs:element name="pattern" type="xs:string" />
      <xs:element name="building" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PatternEntry">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="weight" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="IdeoDescriptionMaker">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="patterns">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PatternEntry" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="rules" type="RulePack" />
      <xs:element name="constants">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" type="xs:string" />
                  <xs:element name="value" type="xs:string" />
                </xs:sequence>
                <xs:attribute name="MayRequire" type="xs:string" />
                <xs:attribute name="MayRequireAnyOf" type="xs:string" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="IdeoSymbolPack">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="ideoName" type="xs:string" />
      <xs:element name="theme" type="xs:string" />
      <xs:element name="adjective" type="xs:string" />
      <xs:element name="member" type="xs:string" />
      <xs:element name="prefix" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PreceptApparelRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="allowedFactionCategoryTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disallowedFactionCategoryTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="anyMemeRequired">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MonolithAttachment">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="graphicIndex" type="xs:int" />
      <xs:element name="offset" type="IntVec2" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="MusicDangerRequirement">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="RequiresDanger" />
      <xs:enumeration value="RequiresNoDanger" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="FactionCurve">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="faction" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PreceptComp">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="description" type="xs:string" />
      <xs:element name="preceptDef" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="AbilityStatModifiers">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="ability" type="xs:string" />
      <xs:element name="modifiers">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="PreceptImpact">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Low" />
      <xs:enumeration value="Medium" />
      <xs:enumeration value="High" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PreceptThingChanceClass">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="def" type="xs:string" />
      <xs:element name="chance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RoomRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="disablingPrecepts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="labelKey" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RoleRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="labelKey" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RoleEffect">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="label" type="xs:string" />
      <xs:element name="labelKey" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="QuestNode">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="QuestGiverTag">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Traders" />
      <xs:enumeration value="OrbitalScanner" />
      <xs:enumeration value="Reading" />
      <xs:enumeration value="Beggars" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RecordType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Time" />
      <xs:enumeration value="Int" />
      <xs:enumeration value="Float" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Branch">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="minFlow" type="xs:int" />
      <xs:element name="child" type="xs:string" />
      <xs:element name="chance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RoadDefGenStep">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="antialiasingMultiplier" type="xs:float" />
      <xs:element name="periodicSpacing" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="WorldRenderStep">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="layer" type="xs:string" />
      <xs:element name="width" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SymbolResolver">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="minRectSize" type="IntVec2" />
      <xs:element name="selectionWeight" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="ScenPartCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Fixed" />
      <xs:enumeration value="StartingImportant" />
      <xs:enumeration value="PlayerPawnFilter" />
      <xs:enumeration value="PlayerPawnModifier" />
      <xs:enumeration value="GameCondition" />
      <xs:enumeration value="Rule" />
      <xs:enumeration value="StartingItem" />
      <xs:enumeration value="WorldThing" />
      <xs:enumeration value="Misc" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="WorkSiteLootThing">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="thing" type="xs:string" />
      <xs:element name="weight" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SketchResolver">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="ToStringNumberSense">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Absolute" />
      <xs:enumeration value="Factor" />
      <xs:enumeration value="Offset" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ToStringStyle">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Integer" />
      <xs:enumeration value="FloatOne" />
      <xs:enumeration value="FloatTwo" />
      <xs:enumeration value="FloatThree" />
      <xs:enumeration value="FloatMaxOne" />
      <xs:enumeration value="FloatMaxTwo" />
      <xs:enumeration value="FloatMaxThree" />
      <xs:enumeration value="FloatTwoOrThree" />
      <xs:enumeration value="PercentZero" />
      <xs:enumeration value="PercentOne" />
      <xs:enumeration value="PercentTwo" />
      <xs:enumeration value="Temperature" />
      <xs:enumeration value="TemperatureOffset" />
      <xs:enumeration value="WorkAmount" />
      <xs:enumeration value="Money" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SkillNeed">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="skill" type="xs:string" />
      <xs:element name="required" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnCapacityOffset">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="capacity" type="xs:string" />
      <xs:element name="scale" type="xs:float" />
      <xs:element name="max" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PawnCapacityFactor">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="capacity" type="xs:string" />
      <xs:element name="weight" type="xs:float" />
      <xs:element name="max" type="xs:float" />
      <xs:element name="useReciprocal" type="StrBoolean" />
      <xs:element name="allowedDefect" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StatPart">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="priority" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StorytellerCompProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="compClass" type="xs:string" />
      <xs:element name="minDaysPassed" type="xs:float" />
      <xs:element name="allowedTargetTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disallowedTargetTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="minIncChancePopulationIntentFactor" type="xs:float" />
      <xs:element name="enableIfAnyModActive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disableIfAnyModActive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="StyleGender">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Male" />
      <xs:enumeration value="MaleUsually" />
      <xs:enumeration value="Any" />
      <xs:enumeration value="FemaleUsually" />
      <xs:enumeration value="Female" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TattooType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Face" />
      <xs:enumeration value="Body" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TaleType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Volatile" />
      <xs:enumeration value="Expirable" />
      <xs:enumeration value="PermanentHistorical" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QualityGenerator">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BaseGen" />
      <xs:enumeration value="Reward" />
      <xs:enumeration value="Gift" />
      <xs:enumeration value="Super" />
      <xs:enumeration value="Trader" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PodContentsType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Empty" />
      <xs:enumeration value="AncientFriendly" />
      <xs:enumeration value="AncientIncapped" />
      <xs:enumeration value="AncientHalfEaten" />
      <xs:enumeration value="AncientHostile" />
      <xs:enumeration value="Slave" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PlanetTile">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="tileId" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="Object">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ThingSetMakerParams">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="techLevel" type="TechLevel" />
      <xs:element name="countRange" type="IntRange" />
      <xs:element name="qualityGenerator" type="QualityGenerator" />
      <xs:element name="maxTotalMass" type="xs:float" />
      <xs:element name="maxThingMarketValue" type="xs:float" />
      <xs:element name="allowNonStackableDuplicates" type="Boolean" />
      <xs:element name="minSingleItemMarketValuePct" type="xs:float" />
      <xs:element name="totalMarketValueRange" type="FloatRange" />
      <xs:element name="totalNutritionRange" type="FloatRange" />
      <xs:element name="podContentsType" type="PodContentsType" />
      <xs:element name="traderDef" type="xs:string" />
      <xs:element name="tile" type="PlanetTile" />
      <xs:element name="custom">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" type="xs:string" />
                  <xs:element name="value" type="Object" />
                </xs:sequence>
                <xs:attribute name="MayRequire" type="xs:string" />
                <xs:attribute name="MayRequireAnyOf" type="xs:string" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ThingSetMaker">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="fixedParams" type="ThingSetMakerParams" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ThoughtStage">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="label" type="xs:string" />
      <xs:element name="labelSocial" type="xs:string" />
      <xs:element name="labelAbstract" type="xs:string" />
      <xs:element name="description" type="xs:string" />
      <xs:element name="baseMoodEffect" type="xs:float" />
      <xs:element name="baseOpinionOffset" type="xs:float" />
      <xs:element name="visible" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="PriceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="VeryCheap" />
      <xs:enumeration value="Cheap" />
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Expensive" />
      <xs:enumeration value="Exorbitant" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="StockGenerator">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="countRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="customCountRanges">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ThingDefCountRangeClass" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="totalPriceRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="maxTechLevelGenerate" type="TechLevel" />
      <xs:element name="maxTechLevelBuy" type="TechLevel" />
      <xs:element name="price" type="PriceType" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="TradeCurrency">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Silver" />
      <xs:enumeration value="Favor" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MeatSourceCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NotMeat" />
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Insect" />
      <xs:enumeration value="Humanlike" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="TraitIngestionThoughtsOverride">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="thing" type="xs:string" />
      <xs:element name="meatSource" type="MeatSourceCategory" />
      <xs:element name="thoughts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="thoughtsDirect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="thoughtsAsIngredient">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="IngestibleModifiers">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="ingestible" type="xs:string" />
      <xs:element name="optimalityOffset" type="xs:float" />
      <xs:element name="poisonChanceOverride" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="TraitDegreeData">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="label" type="xs:string" />
      <xs:element name="labelMale" type="xs:string" />
      <xs:element name="labelFemale" type="xs:string" />
      <xs:element name="description" type="xs:string" />
      <xs:element name="degree" type="xs:int" />
      <xs:element name="commonality" type="xs:float" />
      <xs:element name="statOffsets">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="statFactors">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="thinkTree" type="xs:string" />
      <xs:element name="randomMentalState" type="xs:string" />
      <xs:element name="forcedMentalState" type="xs:string" />
      <xs:element name="forcedMentalStateMtbDays" type="xs:float" />
      <xs:element name="disallowedMentalStates">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disallowedThoughts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disallowedThoughtsFromIngestion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="TraitIngestionThoughtsOverride" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="extraThoughtsFromIngestion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="TraitIngestionThoughtsOverride" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disallowedInspirations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="mentalBreakInspirationGainSet">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="mentalBreakInspirationGainReasonText" type="xs:string" />
      <xs:element name="allowedMeditationFocusTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disallowedMeditationFocusTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="mentalBreakInspirationGainChance" type="xs:float" />
      <xs:element name="theOnlyAllowedMentalBreaks">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="skillGains">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="SkillGain" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="socialFightChanceFactor" type="xs:float" />
      <xs:element name="marketValueFactorOffset" type="xs:float" />
      <xs:element name="randomDiseaseMtbDays" type="xs:float" />
      <xs:element name="hungerRateFactor" type="xs:float" />
      <xs:element name="painOffset" type="xs:float" />
      <xs:element name="painFactor" type="xs:float" />
      <xs:element name="mentalStateGiverClass" type="xs:string" />
      <xs:element name="abilities">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="ingestibleModifiers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="IngestibleModifiers" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="aptitudes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Aptitude" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="enablesNeeds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="disablesNeeds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="possessions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="PossessionThingDefCountClass" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="ProgramState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Entry" />
      <xs:enumeration value="MapInitializing" />
      <xs:enumeration value="Playing" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="CompProperties_EquippableAbilityReloadable">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="maxCharges" type="xs:int" />
      <xs:element name="ammoDef" type="xs:string" />
      <xs:element name="ammoCountToRefill" type="xs:int" />
      <xs:element name="ammoCountPerCharge" type="xs:int" />
      <xs:element name="baseReloadTicks" type="xs:int" />
      <xs:element name="replenishAfterCooldown" type="StrBoolean" />
      <xs:element name="soundReload" type="xs:string" />
      <xs:element name="chargeNoun" type="xs:string" />
      <xs:element name="cooldownGerund" type="xs:string" />
      <xs:element name="abilityDef" type="xs:string" />
      <xs:element name="compClass" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="WorldObjectCompProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="compClass" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="XenotypeChance">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="xenotype" type="xs:string" />
      <xs:element name="chance" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="Hilliness">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Undefined" />
      <xs:enumeration value="Flat" />
      <xs:enumeration value="SmallHills" />
      <xs:enumeration value="LargeHills" />
      <xs:enumeration value="Mountainous" />
      <xs:enumeration value="Impassable" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ScatteredThing">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="thingDef" type="xs:string" />
      <xs:element name="chancePer100Cells" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="AncientStructureGenParms">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="structureLayoutDef" type="xs:string" />
      <xs:element name="structureSizeRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="scatteredPrefabs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ScatteredPrefabs" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="perimeterWallDef" type="xs:string" />
      <xs:element name="perimeterExpandBy" type="xs:int" />
      <xs:element name="perimeterWallChance" type="xs:float" />
      <xs:element name="perimeterTerrainDef" type="xs:string" />
      <xs:element name="perimeterScatterTerrain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="LayoutScatterTerrainParms" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="perimeterScatteredThings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ScatteredThing" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualRole">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="missingDesc" type="xs:string" />
      <xs:element name="noCandidatesGizmoDesc" type="xs:string" />
      <xs:element name="customChildDisallowMessage" type="xs:string" />
      <xs:element name="id" type="xs:string" />
      <xs:element name="precept" type="xs:string" />
      <xs:element name="maxCount" type="xs:int" />
      <xs:element name="mergeId" type="xs:string" />
      <xs:element name="required" type="StrBoolean" />
      <xs:element name="substitutable" type="StrBoolean" />
      <xs:element name="ignoreBleeding" type="StrBoolean" />
      <xs:element name="countsAsParticipant" type="StrBoolean" />
      <xs:element name="addToLord" type="StrBoolean" />
      <xs:element name="allowNonAggroMentalState" type="StrBoolean" />
      <xs:element name="defaultForSelectedColonist" type="StrBoolean" />
      <xs:element name="allowOtherIdeos" type="StrBoolean" />
      <xs:element name="allowDowned" type="StrBoolean" />
      <xs:element name="allowKeepLayingDown" type="StrBoolean" />
      <xs:element name="allowChild" type="StrBoolean" />
      <xs:element name="allowBaby" type="StrBoolean" />
      <xs:element name="removeFromAssignmentsOnDeath" type="StrBoolean" />
      <xs:element name="endJobOnRitualCleanup" type="StrBoolean" />
      <xs:element name="mustBeAbleToReachTarget" type="StrBoolean" />
      <xs:element name="blocksSocialInteraction" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StageEndTrigger">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="countsTowardsProgress" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="StageFailTrigger">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="desc" type="xs:string" />
      <xs:element name="allowanceTicks" type="xs:int" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualStageTickActionMaker">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualRoleBehavior">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="roleId" type="xs:string" />
      <xs:element name="dutyDef" type="xs:string" />
      <xs:element name="jobReportOverride" type="xs:string" />
      <xs:element name="speakerInteraction" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualStage">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="parent" type="xs:string" />
      <xs:element name="defaultDuty" type="xs:string" />
      <xs:element name="endTriggers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="StageEndTrigger" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="failTriggers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="StageFailTrigger" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="highlightRolePositions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="highlightRolePawns">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="tickActionMaker" type="RitualStageTickActionMaker" />
      <xs:element name="visualEffectDef" type="xs:string" />
      <xs:element name="spectatorsRequired" type="StrBoolean" />
      <xs:element name="essential" type="StrBoolean" />
      <xs:element name="ignoreDurationToFinishAfterStage" type="StrBoolean" />
      <xs:element name="allowedSpectateSidesOverride" type="SpectateRectSide" />
      <xs:element name="spectateDistanceOverride">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+\s*(~\s*-?\d+\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="showProgressBar" type="StrBoolean" />
      <xs:element name="roleBehaviors">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="RitualRoleBehavior" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="PreceptRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualCancellationTrigger">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualSpectatorFilter">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="description" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualOutcomePossibility">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="label" type="xs:string" />
      <xs:element name="description" type="xs:string" />
      <xs:element name="potentialExtraOutcomeDesc" type="xs:string" />
      <xs:element name="chance" type="xs:float" />
      <xs:element name="memory" type="xs:string" />
      <xs:element name="positivityIndex" type="xs:int" />
      <xs:element name="roleIdsNotGainingMemory">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="ideoCertaintyOffset" type="xs:float" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ExtraOutcomeChanceDescription">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="description" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualOutcomeComp">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RitualObligationTriggerProperties">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="triggerClass" type="xs:string" />
      <xs:element name="mustBePlayerIdeo" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="CompProperties_RitualVisualEffect">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="compClass" type="xs:string" />
      <xs:element name="moteDef" type="xs:string" />
      <xs:element name="fleckDef" type="xs:string" />
      <xs:element name="effecterDef" type="xs:string" />
      <xs:element name="velocity">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="velocityDir" type="Vector3" />
      <xs:element name="rotation">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="rotationRate">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="scale">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="offset" type="Vector3" />
      <xs:element name="roomCheckOffset" type="IntVec3" />
      <xs:element name="scaleWithRoom" type="StrBoolean" />
      <xs:element name="scalePositionWithRoom" type="StrBoolean" />
      <xs:element name="onlySpawnInSameRoom" type="StrBoolean" />
      <xs:element name="colorOverride" type="Color" />
      <xs:element name="overrideColors">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="Color" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="MutatorChance">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="mutator" type="xs:string" />
      <xs:element name="chance" type="xs:float" />
      <xs:element name="required" type="StrBoolean" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="LandmarkDrawType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Standard" />
      <xs:enumeration value="TerrainMask" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CoastRotateMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="ToCoast" />
      <xs:enumeration value="AwayFromCoast" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ApparelRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="bodyPartGroupsMatchAny">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="requiredTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="allowedTags">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="requiredDefs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="groupLabel" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RoyalTitleFoodRequirement">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="minQuality" type="FoodPreferability" />
      <xs:element name="allowedTypes" type="FoodTypeFlags" />
      <xs:element name="allowedDefs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="MayRequire" type="xs:string" />
                    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="RoyalAid">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="favorCost" type="xs:int" />
      <xs:element name="points" type="xs:int" />
      <xs:element name="overrideAcceptableTemperatureRange" type="FloatRange" />
      <xs:element name="pawnCount" type="xs:int" />
      <xs:element name="pawnKindDef" type="xs:string" />
      <xs:element name="targetingRange" type="xs:float" />
      <xs:element name="targetingRequireLOS" type="StrBoolean" />
      <xs:element name="aidDurationDays" type="xs:float" />
      <xs:element name="radius" type="xs:float" />
      <xs:element name="intervalTicks" type="xs:int" />
      <xs:element name="explosionCount" type="xs:int" />
      <xs:element name="warmupTicks" type="xs:int" />
      <xs:element name="explosionRadiusRange">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\s*-?\d+(\.\d+)?\s*(~\s*-?\d+(\.\d+)?\s*)?" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="itemsToDrop">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="ThingDefCountClass" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SurgeryOutcomeComp">
    <xs:choice minOccurs="1" maxOccurs="unbounded" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="SurgeryOutcome">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="chance" type="xs:float" />
      <xs:element name="totalDamage" type="xs:int" />
      <xs:element name="applyEffectsToPart" type="StrBoolean" />
      <xs:element name="failure" type="StrBoolean" />
      <xs:element name="letterLabel" type="xs:string" />
      <xs:element name="letterText" type="xs:string" />
    </xs:choice>
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
  <xs:simpleType name="JobTag">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Misc" />
      <xs:enumeration value="MiscWork" />
      <xs:enumeration value="Fieldwork" />
      <xs:enumeration value="Idle" />
      <xs:enumeration value="InMentalState" />
      <xs:enumeration value="SatisfyingNeeds" />
      <xs:enumeration value="DraftedOrder" />
      <xs:enumeration value="UnspecifiedLordDuty" />
      <xs:enumeration value="WaitingForOthersToFinishGatheringItems" />
      <xs:enumeration value="TuckedIntoBed" />
      <xs:enumeration value="RestingForMedicalReasons" />
      <xs:enumeration value="ChangingApparel" />
      <xs:enumeration value="Escaping" />
      <xs:enumeration value="JoiningCaravan" />
      <xs:enumeration value="TrainedAnimalBehavior" />
      <xs:enumeration value="UnloadingOwnInventory" />
      <xs:enumeration value="TakeForInventoryStock" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>