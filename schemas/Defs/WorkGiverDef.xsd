<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="https://github.com/sharky98/RWSchema/Defs" elementFormDefault="qualified" targetNamespace="https://github.com/sharky98/RWSchema/Defs" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="CommonElements.xsd" />
  <xs:complexType name="WorkGiverDef">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="giverClass" type="xs:string" />
      <xs:element name="workType" type="xs:string" />
      <xs:element name="workTags" type="WorkTags" />
      <xs:element name="priorityInType" type="xs:int" />
      <xs:element name="verb" type="xs:string" />
      <xs:element name="gerund" type="xs:string" />
      <xs:element name="scanThings" type="xs:boolean" />
      <xs:element name="scanCells" type="xs:boolean" />
      <xs:element name="emergency" type="xs:boolean" />
      <xs:element name="requiredCapacities">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="xs:string" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="directOrderable" type="xs:boolean" />
      <xs:element name="prioritizeSustains" type="xs:boolean" />
      <xs:element name="nonColonistsCanDo" type="xs:boolean" />
      <xs:element name="tagToGive" type="JobTag" />
      <xs:element name="equivalenceGroup" type="xs:string" />
      <xs:element name="canBeDoneWhileDrafted" type="xs:boolean" />
      <xs:element name="autoTakeablePriorityDrafted" type="xs:int" />
      <xs:element name="forceMote" type="xs:string" />
      <xs:element name="forceFleck" type="xs:string" />
      <xs:element name="canBeDoneByMechs" type="xs:boolean" />
      <xs:element name="fixedBillGiverDefs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="xs:string" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="billGiversAllHumanlikes" type="xs:boolean" />
      <xs:element name="billGiversAllHumanlikesCorpses" type="xs:boolean" />
      <xs:element name="billGiversAllMechanoids" type="xs:boolean" />
      <xs:element name="billGiversAllMechanoidsCorpses" type="xs:boolean" />
      <xs:element name="billGiversAllAnimals" type="xs:boolean" />
      <xs:element name="billGiversAllAnimalsCorpses" type="xs:boolean" />
      <xs:element name="feedHumanlikesOnly" type="xs:boolean" />
      <xs:element name="feedAnimalsOnly" type="xs:boolean" />
      <xs:element name="doesSmoothing" type="xs:boolean" />
      <xs:element name="scannerDef" type="xs:string" />
      <xs:element name="defName" type="xs:string" />
      <xs:element name="label" type="xs:string" />
      <xs:element name="description" type="xs:string" />
      <xs:element name="descriptionHyperlinks">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="DefHyperlink" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <xs:element name="ignoreConfigErrors" type="xs:boolean" />
      <xs:element name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element name="modExtensions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="li" type="DefModExtension" />
          </xs:sequence>
          <xs:attribute name="MayRequire" type="xs:string" />
          <xs:attribute name="MayRequireAnyOf" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="ParentName" type="xs:string" />
    <xs:attribute name="Class" type="xs:string" />
    <xs:attribute name="MayRequire" type="xs:string" />
    <xs:attribute name="MayRequireAnyOf" type="xs:string" />
  </xs:complexType>
</xs:schema>